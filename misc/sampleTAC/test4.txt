1:              begin_function print_Zzint_Nn1   
2:              pop_param #var1%print_Zzint_Nn1   
3:              $t1 = findAddress integer_format 
4:              param #var1%print_Zzint_Nn1   
5:              param $t1   
6:              call printf 2  
7:              $t2 = findAddress end_line_format 
8:              param $t2   
9:              call printf 1  
10:             return    
11:             end_function    
12:             begin_function print_Zzfloat_Nn1   
13:             pop_param #var1%print_Zzfloat_Nn1   
14:             $t3 = findAddress float_format 
15:             param #var1%print_Zzfloat_Nn1   
16:             param $t3   
17:             call printf 2  
18:             $t4 = findAddress end_line_format 
19:             param $t4   
20:             call printf 1  
21:             return    
22:             end_function    
23:             begin_function print_Zzstr_Nn1   
24:             pop_param #var1%print_Zzstr_Nn1   
25:             $t5 = findAddress string_format 
26:             param #var1%print_Zzstr_Nn1   
27:             param $t5   
28:             call printf 2  
29:             $t6 = findAddress end_line_format 
30:             param $t6   
31:             call printf 1  
32:             return    
33:             end_function    
34:             begin_function print_Zzbool_Nn1   
35:             pop_param #var1%print_Zzbool_Nn1   
36:             $t8 = #var1%print_Zzbool_Nn1 != 0
37:             if_false $t8 goto 40 
38:             $t7 = findAddress true_format 
39:             if $t8 goto 41 
40:             $t7 = findAddress false_format 
41:             param $t7   
42:             call printf 1  
43:             $t9 = findAddress end_line_format 
44:             param $t9   
45:             call printf 1  
46:             return    
47:             end_function    
48:             begin_function print_Zzlist_int__Nn1   
49:             pop_param #var1%print_Zzlist_int__Nn1   
50:             $t10 = *(#var1%print_Zzlist_int__Nn1)  
51:             $t11 = 1  
52:             $t12 = findAddress list_start_format 
53:             param $t12   
54:             call printf 1  
55:             $t13 = $t11 > $t10
56:             if $t13 goto 71 
57:             $t14 = $t11 * 8
58:             $t15 = #var1%print_Zzlist_int__Nn1 + $t14
59:             $t16 = *($t15)  
60:             $t17 = findAddress integer_format 
61:             param $t16   
62:             param $t17   
63:             call printf 2  
64:             $t18 = findAddress comma_format 
65:             param $t18   
66:             call printf 1  
67:             $t11 = $t11 + 1
68:             $t19 = $t10 + 1
69:             $t20 = $t11 < $t19
70:             if $t20 goto 57 
71:             $t21 = findAddress list_end_format 
72:             param $t21   
73:             call printf 1  
74:             $t22 = findAddress end_line_format 
75:             param $t22   
76:             call printf 1  
77:             return    
78:             end_function    
79:             begin_function print_Zzlist_str__Nn1   
80:             pop_param #var1%print_Zzlist_str__Nn1   
81:             $t23 = *(#var1%print_Zzlist_str__Nn1)  
82:             $t24 = 1  
83:             $t25 = findAddress list_start_format 
84:             param $t25   
85:             call printf 1  
86:             $t20 = $t24 > $t23
87:             if $t20 goto 102 
88:             $t26 = $t24 * 8
89:             $t27 = #var1%print_Zzlist_str__Nn1 + $t26
90:             $t28 = *($t27)  
91:             $t29 = findAddress string_format 
92:             param $t28   
93:             param $t29   
94:             call printf 2  
95:             $t30 = findAddress comma_format 
96:             param $t30   
97:             call printf 1  
98:             $t24 = $t24 + 1
99:             $t31 = $t23 + 1
100:            $t32 = $t24 < $t31
101:            if $t32 goto 88 
102:            $t33 = findAddress list_end_format 
103:            param $t33   
104:            call printf 1  
105:            $t34 = findAddress end_line_format 
106:            param $t34   
107:            call printf 1  
108:            return    
109:            end_function    
110:            begin_function print_Zzlist_float__Nn1   
111:            pop_param #var1%print_Zzlist_float__Nn1   
112:            $t35 = *(#var1%print_Zzlist_float__Nn1)  
113:            $t36 = 1  
114:            $t37 = findAddress list_start_format 
115:            param $t37   
116:            call printf 1  
117:            $t32 = $t36 > $t35
118:            if $t32 goto 133 
119:            $t38 = $t36 * 8
120:            $t39 = #var1%print_Zzlist_float__Nn1 + $t38
121:            $t40 = *($t39)  
122:            $t41 = findAddress float_format 
123:            param $t40   
124:            param $t41   
125:            call printf 2  
126:            $t42 = findAddress comma_format 
127:            param $t42   
128:            call printf 1  
129:            $t36 = $t36 + 1
130:            $t43 = $t35 + 1
131:            $t44 = $t36 < $t43
132:            if $t44 goto 119 
133:            $t45 = findAddress list_end_format 
134:            param $t45   
135:            call printf 1  
136:            $t46 = findAddress end_line_format 
137:            param $t46   
138:            call printf 1  
139:            return    
140:            end_function    
141:            begin_function print_Zzlist_bool__Nn1   
142:            pop_param #var1%print_Zzlist_bool__Nn1   
143:            $t47 = *(#var1%print_Zzlist_bool__Nn1)  
144:            $t48 = 1  
145:            $t49 = findAddress list_start_format 
146:            param $t49   
147:            call printf 1  
148:            $t44 = $t48 > $t47
149:            if $t44 goto 167 
150:            $t50 = $t48 * 8
151:            $t51 = #var1%print_Zzlist_bool__Nn1 + $t50
152:            $t52 = *($t51)  
153:            $t54 = $t52 != 0
154:            if_false $t54 goto 157 
155:            $t53 = findAddress true_format 
156:            if $t54 goto 158 
157:            $t53 = findAddress false_format 
158:            param $t53   
159:            call printf 1  
160:            $t55 = findAddress comma_format 
161:            param $t55   
162:            call printf 1  
163:            $t48 = $t48 + 1
164:            $t56 = $t47 + 1
165:            $t57 = $t48 < $t56
166:            if $t57 goto 150 
167:            $t58 = findAddress list_end_format 
168:            param $t58   
169:            call printf 1  
170:            $t59 = findAddress end_line_format 
171:            param $t59   
172:            call printf 1  
173:            return    
174:            end_function    
175:            begin_function range_Zzint_Nn1   
176:            pop_param #var2%range_Zzint_Nn1   
177:            $t60 = #var2%range_Zzint_Nn1 < 0
178:            if_false $t60 goto 180 
179:            #var2%range_Zzint_Nn1 = 0  
180:            $t61 = #var2%range_Zzint_Nn1 + 1
181:            $t62 = $t61 * 8
182:            param $t62   
183:            call malloc 1  
184:            $t63 = popparam  
185:            *($t63) = #var2%range_Zzint_Nn1  
186:            $t64 = 1  
187:            $t65 = $t64 < $t61
188:            if_false $t65 goto 195 
189:            $t66 = $t64 * 8
190:            $t67 = $t63 + $t66
191:            *($t67) = $t64 - 1
192:            $t64 = $t64 + 1
193:            $t65 = $t64 < $t61
194:            if $t65 goto 189 
195:            push $t63   
196:            return    
197:            end_function    
198:            begin_function range_Zzint_Zzint_Nn2   
199:            pop_param #var1%range_Zzint_Zzint_Nn2   
200:            pop_param #var2%range_Zzint_Zzint_Nn2   
201:            $t68 = #var2%range_Zzint_Zzint_Nn2 - #var1%range_Zzint_Zzint_Nn2
202:            $t72 = $t68 < 0
203:            if_false $t72 goto 205 
204:            $t68 = 0  
205:            $t69 = $t68 + 1
206:            $t70 = $t69 * 8
207:            param $t70   
208:            call malloc 1  
209:            $t73 = popparam  
210:            $t74 = #var1%range_Zzint_Zzint_Nn2  
211:            *($t73) = $t68  
212:            $t75 = $t74 < #var2%range_Zzint_Zzint_Nn2
213:            if_false $t75 goto 222 
214:            $t77 = $t74 - #var1%range_Zzint_Zzint_Nn2
215:            $t71 = $t77 + 1
216:            $t76 = $t71 * 8
217:            $t78 = $t73 + $t76
218:            *($t78) = $t74  
219:            $t74 = $t74 + 1
220:            $t75 = $t74 < #var2%range_Zzint_Zzint_Nn2
221:            if $t75 goto 214 
222:            push $t73   
223:            return    
224:            end_function    
225:            begin_function len_Zzstr_Nn1   
226:            pop_param #var1%len_Zzstr_Nn1   
227:            #var1%len_Zzstr_Nn1 = #var1%len_Zzstr_Nn1 - 8
228:            $t79 = *(#var1%len_Zzstr_Nn1)  
229:            push $t79   
230:            return    
231:            end_function    
232:            begin_function len_Zzlist_bool__Nn1   
233:            pop_param #len%len_Zzlist_bool__Nn1   
234:            $t80 = *(#len%len_Zzlist_bool__Nn1)  
235:            push $t80   
236:            return    
237:            end_function    
238:            begin_function len_Zzlist_float__Nn1   
239:            pop_param #len%len_Zzlist_float__Nn1   
240:            $t81 = *(#len%len_Zzlist_float__Nn1)  
241:            push $t81   
242:            return    
243:            end_function    
244:            begin_function len_Zzlist_int__Nn1   
245:            pop_param #len%len_Zzlist_int__Nn1   
246:            $t82 = *(#len%len_Zzlist_int__Nn1)  
247:            push $t82   
248:            return    
249:            end_function    
250:            begin_function len_Zzlist_str__Nn1   
251:            pop_param #len%len_Zzlist_str__Nn1   
252:            $t83 = *(#len%len_Zzlist_str__Nn1)  
253:            push $t83   
254:            return    
255:            end_function    
256:            begin_function fibonacci_Zzint_Nn1   
257:            pop_param n%fibonacci_Zzint_Nn1   
258:            $t84 = n%fibonacci_Zzint_Nn1 <= 1
259:            if_false $t84 goto 262 
260:            push n%fibonacci_Zzint_Nn1   
261:            return    
262:            prev%fibonacci_Zzint_Nn1 = 0  
263:            curr%fibonacci_Zzint_Nn1 = 1  
264:            $t85 = n%fibonacci_Zzint_Nn1 + 1
265:            param $t85   
266:            param 2   
267:            call range_Zzint_Zzint_Nn2 2  
268:            $t86 = popparam  
269:            $t89 = *($t86)  
270:            $t87 = 1  
271:            $t92 = $t87 - 1
272:            $t88 = $t87 * 8
273:            $t91 = $t86 + $t88
274:            i%fibonacci_Zzint_Nn1 = *($t91)  
275:            $t87 = $t87 + 1
276:            $t93 = $t92 < $t89
277:            if_false $t93 goto 283 
278:            temp%fibonacci_Zzint_Nn1 = prev%fibonacci_Zzint_Nn1  
279:            prev%fibonacci_Zzint_Nn1 = curr%fibonacci_Zzint_Nn1  
280:            $t94 = prev%fibonacci_Zzint_Nn1 + temp%fibonacci_Zzint_Nn1
281:            curr%fibonacci_Zzint_Nn1 = $t94  
282:            goto 271   
283:            push curr%fibonacci_Zzint_Nn1   
284:            return    
285:            end_function    
286:            begin_function main_Nn0   
287:            n%main_Nn0 = 5  
288:            param n%main_Nn0   
289:            shift_sp -32   
290:            call fibonacci_Zzint_Nn1 1  
291:            shift_sp 32   
292:            $t95 = popparam  
293:            result%main_Nn0 = $t95  
294:            param result%main_Nn0   
295:            call print_Zzint_Nn1 1  
296:            end_function    
297:            begin_function #main   
298:            shift_sp -16   
299:            call main_Nn0 0  
300:            shift_sp 16   
301:            end_function    
END                 
