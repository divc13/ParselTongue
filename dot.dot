digraph G {
0 { label = "file(file)";} -> 1 { label = "statements(statements)";};
0 { label = "file(file)";} -> 2 { label = "EOF(EndOfFile)";};
1 { label = "statements(statements)";} -> 3 { label = "statements(statements)";};
1 { label = "statements(statements)";} -> 4 { label = "statement(statement)";};
3 { label = "statements(statements)";} -> 5 { label = "statements(statements)";};
3 { label = "statements(statements)";} -> 6 { label = "statement(statement)";};
4 { label = "statement(statement)";} -> 7 { label = "compound_stmt(compound_stmt)";};
5 { label = "statements(statements)";} -> 8 { label = "statements(statements)";};
5 { label = "statements(statements)";} -> 9 { label = "statement(statement)";};
6 { label = "statement(statement)";} -> 10 { label = "compound_stmt(compound_stmt)";};
7 { label = "compound_stmt(compound_stmt)";} -> 11 { label = "if_stmt(if_stmt)";};
8 { label = "statements(statements)";} -> 12 { label = "statements(statements)";};
8 { label = "statements(statements)";} -> 13 { label = "statement(statement)";};
9 { label = "statement(statement)";} -> 14 { label = "compound_stmt(compound_stmt)";};
10 { label = "compound_stmt(compound_stmt)";} -> 15 { label = "function_def(function_def)";};
11 { label = "if_stmt(if_stmt)";} -> 16 { label = "KEYWORD(if)";};
11 { label = "if_stmt(if_stmt)";} -> 17 { label = "expression(expression)";};
11 { label = "if_stmt(if_stmt)";} -> 18 { label = "DELIMITER(:)";};
11 { label = "if_stmt(if_stmt)";} -> 19 { label = "block(block)";};
12 { label = "statements(statements)";} -> 20 { label = "statement(statement)";};
13 { label = "statement(statement)";} -> 21 { label = "compound_stmt(compound_stmt)";};
14 { label = "compound_stmt(compound_stmt)";} -> 22 { label = "function_def(function_def)";};
15 { label = "function_def(function_def)";} -> 23 { label = "KEYWORD(def)";};
15 { label = "function_def(function_def)";} -> 24 { label = "IDENTIFIER(main)";};
15 { label = "function_def(function_def)";} -> 25 { label = "DELIMITER(()";};
15 { label = "function_def(function_def)";} -> 26 { label = "is_params(is_params)";};
15 { label = "function_def(function_def)";} -> 27 { label = "DELIMITER())";};
15 { label = "function_def(function_def)";} -> 28 { label = "is_fn_expression(is_fn_expression)";};
15 { label = "function_def(function_def)";} -> 29 { label = "DELIMITER(:)";};
15 { label = "function_def(function_def)";} -> 30 { label = "block(block)";};
17 { label = "expression(expression)";} -> 31 { label = "disjunction(disjunction)";};
19 { label = "block(block)";} -> 32 { label = "NEWLINE(Newline)";};
19 { label = "block(block)";} -> 33 { label = "INDENT(Indent)";};
19 { label = "block(block)";} -> 34 { label = "statements(statements)";};
19 { label = "block(block)";} -> 35 { label = "DEDENT(Dedent)";};
20 { label = "statement(statement)";} -> 36 { label = "simple_stmts(simple_stmts)";};
21 { label = "compound_stmt(compound_stmt)";} -> 37 { label = "function_def(function_def)";};
22 { label = "function_def(function_def)";} -> 38 { label = "KEYWORD(def)";};
22 { label = "function_def(function_def)";} -> 39 { label = "IDENTIFIER(compute_avg)";};
22 { label = "function_def(function_def)";} -> 40 { label = "DELIMITER(()";};
22 { label = "function_def(function_def)";} -> 41 { label = "is_params(is_params)";};
22 { label = "function_def(function_def)";} -> 42 { label = "DELIMITER())";};
22 { label = "function_def(function_def)";} -> 43 { label = "is_fn_expression(is_fn_expression)";};
22 { label = "function_def(function_def)";} -> 44 { label = "DELIMITER(:)";};
22 { label = "function_def(function_def)";} -> 45 { label = "block(block)";};
30 { label = "block(block)";} -> 46 { label = "NEWLINE(Newline)";};
30 { label = "block(block)";} -> 47 { label = "INDENT(Indent)";};
30 { label = "block(block)";} -> 48 { label = "statements(statements)";};
30 { label = "block(block)";} -> 49 { label = "DEDENT(Dedent)";};
31 { label = "disjunction(disjunction)";} -> 50 { label = "conjunction(conjunction)";};
34 { label = "statements(statements)";} -> 51 { label = "statement(statement)";};
36 { label = "simple_stmts(simple_stmts)";} -> 52 { label = "simple1(simple1)";};
36 { label = "simple_stmts(simple_stmts)";} -> 53 { label = "simple2(simple2)";};
36 { label = "simple_stmts(simple_stmts)";} -> 54 { label = "NEWLINE(Newline)";};
37 { label = "function_def(function_def)";} -> 55 { label = "KEYWORD(def)";};
37 { label = "function_def(function_def)";} -> 56 { label = "IDENTIFIER(compute_min)";};
37 { label = "function_def(function_def)";} -> 57 { label = "DELIMITER(()";};
37 { label = "function_def(function_def)";} -> 58 { label = "is_params(is_params)";};
37 { label = "function_def(function_def)";} -> 59 { label = "DELIMITER())";};
37 { label = "function_def(function_def)";} -> 60 { label = "is_fn_expression(is_fn_expression)";};
37 { label = "function_def(function_def)";} -> 61 { label = "DELIMITER(:)";};
37 { label = "function_def(function_def)";} -> 62 { label = "block(block)";};
43 { label = "is_fn_expression(is_fn_expression)";} -> 63 { label = "DELIMITER(->)";};
43 { label = "is_fn_expression(is_fn_expression)";} -> 64 { label = "expression(expression)";};
45 { label = "block(block)";} -> 65 { label = "NEWLINE(Newline)";};
45 { label = "block(block)";} -> 66 { label = "INDENT(Indent)";};
45 { label = "block(block)";} -> 67 { label = "statements(statements)";};
45 { label = "block(block)";} -> 68 { label = "DEDENT(Dedent)";};
48 { label = "statements(statements)";} -> 69 { label = "statements(statements)";};
48 { label = "statements(statements)";} -> 70 { label = "statement(statement)";};
50 { label = "conjunction(conjunction)";} -> 71 { label = "inversion(inversion)";};
51 { label = "statement(statement)";} -> 72 { label = "simple_stmts(simple_stmts)";};
52 { label = "simple1(simple1)";} -> 73 { label = "simple_stmt(simple_stmt)";};
60 { label = "is_fn_expression(is_fn_expression)";} -> 74 { label = "DELIMITER(->)";};
60 { label = "is_fn_expression(is_fn_expression)";} -> 75 { label = "expression(expression)";};
62 { label = "block(block)";} -> 76 { label = "NEWLINE(Newline)";};
62 { label = "block(block)";} -> 77 { label = "INDENT(Indent)";};
62 { label = "block(block)";} -> 78 { label = "statements(statements)";};
62 { label = "block(block)";} -> 79 { label = "DEDENT(Dedent)";};
64 { label = "expression(expression)";} -> 80 { label = "disjunction(disjunction)";};
67 { label = "statements(statements)";} -> 81 { label = "statements(statements)";};
67 { label = "statements(statements)";} -> 82 { label = "statement(statement)";};
69 { label = "statements(statements)";} -> 83 { label = "statements(statements)";};
69 { label = "statements(statements)";} -> 84 { label = "statement(statement)";};
70 { label = "statement(statement)";} -> 85 { label = "simple_stmts(simple_stmts)";};
71 { label = "inversion(inversion)";} -> 86 { label = "comparison(comparison)";};
72 { label = "simple_stmts(simple_stmts)";} -> 87 { label = "simple1(simple1)";};
72 { label = "simple_stmts(simple_stmts)";} -> 88 { label = "simple2(simple2)";};
72 { label = "simple_stmts(simple_stmts)";} -> 89 { label = "NEWLINE(Newline)";};
73 { label = "simple_stmt(simple_stmt)";} -> 90 { label = "assignment(assignment)";};
75 { label = "expression(expression)";} -> 91 { label = "disjunction(disjunction)";};
78 { label = "statements(statements)";} -> 92 { label = "statements(statements)";};
78 { label = "statements(statements)";} -> 93 { label = "statement(statement)";};
80 { label = "disjunction(disjunction)";} -> 94 { label = "conjunction(conjunction)";};
81 { label = "statements(statements)";} -> 95 { label = "statements(statements)";};
81 { label = "statements(statements)";} -> 96 { label = "statement(statement)";};
82 { label = "statement(statement)";} -> 97 { label = "simple_stmts(simple_stmts)";};
83 { label = "statements(statements)";} -> 98 { label = "statements(statements)";};
83 { label = "statements(statements)";} -> 99 { label = "statement(statement)";};
84 { label = "statement(statement)";} -> 100 { label = "simple_stmts(simple_stmts)";};
85 { label = "simple_stmts(simple_stmts)";} -> 101 { label = "simple1(simple1)";};
85 { label = "simple_stmts(simple_stmts)";} -> 102 { label = "simple2(simple2)";};
85 { label = "simple_stmts(simple_stmts)";} -> 103 { label = "NEWLINE(Newline)";};
86 { label = "comparison(comparison)";} -> 104 { label = "bitwise_or(bitwise_or)";};
86 { label = "comparison(comparison)";} -> 105 { label = "many_compare_op_bitwise_or_pairs(many_compare_op_bitwise_or_pairs)";};
87 { label = "simple1(simple1)";} -> 106 { label = "simple_stmt(simple_stmt)";};
90 { label = "assignment(assignment)";} -> 107 { label = "primary(primary)";};
90 { label = "assignment(assignment)";} -> 108 { label = "DELIMITER(:)";};
90 { label = "assignment(assignment)";} -> 109 { label = "expression(expression)";};
90 { label = "assignment(assignment)";} -> 110 { label = "OPERATOR(=)";};
90 { label = "assignment(assignment)";} -> 111 { label = "expressions(expressions)";};
91 { label = "disjunction(disjunction)";} -> 112 { label = "conjunction(conjunction)";};
92 { label = "statements(statements)";} -> 113 { label = "statements(statements)";};
92 { label = "statements(statements)";} -> 114 { label = "statement(statement)";};
93 { label = "statement(statement)";} -> 115 { label = "simple_stmts(simple_stmts)";};
94 { label = "conjunction(conjunction)";} -> 116 { label = "inversion(inversion)";};
95 { label = "statements(statements)";} -> 117 { label = "statements(statements)";};
95 { label = "statements(statements)";} -> 118 { label = "statement(statement)";};
96 { label = "statement(statement)";} -> 119 { label = "compound_stmt(compound_stmt)";};
97 { label = "simple_stmts(simple_stmts)";} -> 120 { label = "simple1(simple1)";};
97 { label = "simple_stmts(simple_stmts)";} -> 121 { label = "simple2(simple2)";};
97 { label = "simple_stmts(simple_stmts)";} -> 122 { label = "NEWLINE(Newline)";};
98 { label = "statements(statements)";} -> 123 { label = "statements(statements)";};
98 { label = "statements(statements)";} -> 124 { label = "statement(statement)";};
99 { label = "statement(statement)";} -> 125 { label = "simple_stmts(simple_stmts)";};
100 { label = "simple_stmts(simple_stmts)";} -> 126 { label = "simple1(simple1)";};
100 { label = "simple_stmts(simple_stmts)";} -> 127 { label = "simple2(simple2)";};
100 { label = "simple_stmts(simple_stmts)";} -> 128 { label = "NEWLINE(Newline)";};
101 { label = "simple1(simple1)";} -> 129 { label = "simple_stmt(simple_stmt)";};
104 { label = "bitwise_or(bitwise_or)";} -> 130 { label = "bitwise_xor(bitwise_xor)";};
105 { label = "many_compare_op_bitwise_or_pairs(many_compare_op_bitwise_or_pairs)";} -> 131 { label = "compare_op_bitwise_or_pair(compare_op_bitwise_or_pair)";};
106 { label = "simple_stmt(simple_stmt)";} -> 132 { label = "expressions(expressions)";};
107 { label = "primary(primary)";} -> 133 { label = "atom(atom)";};
109 { label = "expression(expression)";} -> 134 { label = "disjunction(disjunction)";};
111 { label = "expressions(expressions)";} -> 135 { label = "expressions_comma(expressions_comma)";};
112 { label = "conjunction(conjunction)";} -> 136 { label = "inversion(inversion)";};
113 { label = "statements(statements)";} -> 137 { label = "statements(statements)";};
113 { label = "statements(statements)";} -> 138 { label = "statement(statement)";};
114 { label = "statement(statement)";} -> 139 { label = "compound_stmt(compound_stmt)";};
115 { label = "simple_stmts(simple_stmts)";} -> 140 { label = "simple1(simple1)";};
115 { label = "simple_stmts(simple_stmts)";} -> 141 { label = "simple2(simple2)";};
115 { label = "simple_stmts(simple_stmts)";} -> 142 { label = "NEWLINE(Newline)";};
116 { label = "inversion(inversion)";} -> 143 { label = "comparison(comparison)";};
117 { label = "statements(statements)";} -> 144 { label = "statements(statements)";};
117 { label = "statements(statements)";} -> 145 { label = "statement(statement)";};
118 { label = "statement(statement)";} -> 146 { label = "simple_stmts(simple_stmts)";};
119 { label = "compound_stmt(compound_stmt)";} -> 147 { label = "for_stmt(for_stmt)";};
120 { label = "simple1(simple1)";} -> 148 { label = "simple_stmt(simple_stmt)";};
123 { label = "statements(statements)";} -> 149 { label = "statements(statements)";};
123 { label = "statements(statements)";} -> 150 { label = "statement(statement)";};
124 { label = "statement(statement)";} -> 151 { label = "simple_stmts(simple_stmts)";};
125 { label = "simple_stmts(simple_stmts)";} -> 152 { label = "simple1(simple1)";};
125 { label = "simple_stmts(simple_stmts)";} -> 153 { label = "simple2(simple2)";};
125 { label = "simple_stmts(simple_stmts)";} -> 154 { label = "NEWLINE(Newline)";};
126 { label = "simple1(simple1)";} -> 155 { label = "simple_stmt(simple_stmt)";};
129 { label = "simple_stmt(simple_stmt)";} -> 156 { label = "expressions(expressions)";};
130 { label = "bitwise_xor(bitwise_xor)";} -> 157 { label = "bitwise_and(bitwise_and)";};
131 { label = "compare_op_bitwise_or_pair(compare_op_bitwise_or_pair)";} -> 158 { label = "eq_bitwise_or(eq_bitwise_or)";};
132 { label = "expressions(expressions)";} -> 159 { label = "expressions_comma(expressions_comma)";};
133 { label = "atom(atom)";} -> 160 { label = "IDENTIFIER(data)";};
134 { label = "disjunction(disjunction)";} -> 161 { label = "conjunction(conjunction)";};
135 { label = "expressions_comma(expressions_comma)";} -> 162 { label = "expression(expression)";};
136 { label = "inversion(inversion)";} -> 163 { label = "comparison(comparison)";};
137 { label = "statements(statements)";} -> 164 { label = "statement(statement)";};
138 { label = "statement(statement)";} -> 165 { label = "simple_stmts(simple_stmts)";};
139 { label = "compound_stmt(compound_stmt)";} -> 166 { label = "for_stmt(for_stmt)";};
140 { label = "simple1(simple1)";} -> 167 { label = "simple_stmt(simple_stmt)";};
143 { label = "comparison(comparison)";} -> 168 { label = "bitwise_or(bitwise_or)";};
144 { label = "statements(statements)";} -> 169 { label = "statement(statement)";};
145 { label = "statement(statement)";} -> 170 { label = "simple_stmts(simple_stmts)";};
146 { label = "simple_stmts(simple_stmts)";} -> 171 { label = "simple1(simple1)";};
146 { label = "simple_stmts(simple_stmts)";} -> 172 { label = "simple2(simple2)";};
146 { label = "simple_stmts(simple_stmts)";} -> 173 { label = "NEWLINE(Newline)";};
147 { label = "for_stmt(for_stmt)";} -> 174 { label = "KEYWORD(for)";};
147 { label = "for_stmt(for_stmt)";} -> 175 { label = "primary(primary)";};
147 { label = "for_stmt(for_stmt)";} -> 176 { label = "KEYWORD(in)";};
147 { label = "for_stmt(for_stmt)";} -> 177 { label = "expression(expression)";};
147 { label = "for_stmt(for_stmt)";} -> 178 { label = "DELIMITER(:)";};
147 { label = "for_stmt(for_stmt)";} -> 179 { label = "block(block)";};
148 { label = "simple_stmt(simple_stmt)";} -> 180 { label = "return_stmt(return_stmt)";};
149 { label = "statements(statements)";} -> 181 { label = "statement(statement)";};
150 { label = "statement(statement)";} -> 182 { label = "simple_stmts(simple_stmts)";};
151 { label = "simple_stmts(simple_stmts)";} -> 183 { label = "simple1(simple1)";};
151 { label = "simple_stmts(simple_stmts)";} -> 184 { label = "simple2(simple2)";};
151 { label = "simple_stmts(simple_stmts)";} -> 185 { label = "NEWLINE(Newline)";};
152 { label = "simple1(simple1)";} -> 186 { label = "simple_stmt(simple_stmt)";};
155 { label = "simple_stmt(simple_stmt)";} -> 187 { label = "expressions(expressions)";};
156 { label = "expressions(expressions)";} -> 188 { label = "expressions_comma(expressions_comma)";};
157 { label = "bitwise_and(bitwise_and)";} -> 189 { label = "shift_expr(shift_expr)";};
158 { label = "eq_bitwise_or(eq_bitwise_or)";} -> 190 { label = "OPERATOR(==)";};
158 { label = "eq_bitwise_or(eq_bitwise_or)";} -> 191 { label = "bitwise_or(bitwise_or)";};
159 { label = "expressions_comma(expressions_comma)";} -> 192 { label = "expression(expression)";};
161 { label = "conjunction(conjunction)";} -> 193 { label = "inversion(inversion)";};
162 { label = "expression(expression)";} -> 194 { label = "disjunction(disjunction)";};
163 { label = "comparison(comparison)";} -> 195 { label = "bitwise_or(bitwise_or)";};
164 { label = "statement(statement)";} -> 196 { label = "simple_stmts(simple_stmts)";};
165 { label = "simple_stmts(simple_stmts)";} -> 197 { label = "simple1(simple1)";};
165 { label = "simple_stmts(simple_stmts)";} -> 198 { label = "simple2(simple2)";};
165 { label = "simple_stmts(simple_stmts)";} -> 199 { label = "NEWLINE(Newline)";};
166 { label = "for_stmt(for_stmt)";} -> 200 { label = "KEYWORD(for)";};
166 { label = "for_stmt(for_stmt)";} -> 201 { label = "primary(primary)";};
166 { label = "for_stmt(for_stmt)";} -> 202 { label = "KEYWORD(in)";};
166 { label = "for_stmt(for_stmt)";} -> 203 { label = "expression(expression)";};
166 { label = "for_stmt(for_stmt)";} -> 204 { label = "DELIMITER(:)";};
166 { label = "for_stmt(for_stmt)";} -> 205 { label = "block(block)";};
167 { label = "simple_stmt(simple_stmt)";} -> 206 { label = "return_stmt(return_stmt)";};
168 { label = "bitwise_or(bitwise_or)";} -> 207 { label = "bitwise_xor(bitwise_xor)";};
169 { label = "statement(statement)";} -> 208 { label = "simple_stmts(simple_stmts)";};
170 { label = "simple_stmts(simple_stmts)";} -> 209 { label = "simple1(simple1)";};
170 { label = "simple_stmts(simple_stmts)";} -> 210 { label = "simple2(simple2)";};
170 { label = "simple_stmts(simple_stmts)";} -> 211 { label = "NEWLINE(Newline)";};
171 { label = "simple1(simple1)";} -> 212 { label = "simple_stmt(simple_stmt)";};
175 { label = "primary(primary)";} -> 213 { label = "atom(atom)";};
177 { label = "expression(expression)";} -> 214 { label = "disjunction(disjunction)";};
179 { label = "block(block)";} -> 215 { label = "NEWLINE(Newline)";};
179 { label = "block(block)";} -> 216 { label = "INDENT(Indent)";};
179 { label = "block(block)";} -> 217 { label = "statements(statements)";};
179 { label = "block(block)";} -> 218 { label = "DEDENT(Dedent)";};
180 { label = "return_stmt(return_stmt)";} -> 219 { label = "KEYWORD(return)";};
180 { label = "return_stmt(return_stmt)";} -> 220 { label = "expressions(expressions)";};
181 { label = "statement(statement)";} -> 221 { label = "simple_stmts(simple_stmts)";};
182 { label = "simple_stmts(simple_stmts)";} -> 222 { label = "simple1(simple1)";};
182 { label = "simple_stmts(simple_stmts)";} -> 223 { label = "simple2(simple2)";};
182 { label = "simple_stmts(simple_stmts)";} -> 224 { label = "NEWLINE(Newline)";};
183 { label = "simple1(simple1)";} -> 225 { label = "simple_stmt(simple_stmt)";};
186 { label = "simple_stmt(simple_stmt)";} -> 226 { label = "assignment(assignment)";};
187 { label = "expressions(expressions)";} -> 227 { label = "expressions_comma(expressions_comma)";};
188 { label = "expressions_comma(expressions_comma)";} -> 228 { label = "expression(expression)";};
189 { label = "shift_expr(shift_expr)";} -> 229 { label = "sum(sum)";};
191 { label = "bitwise_or(bitwise_or)";} -> 230 { label = "bitwise_xor(bitwise_xor)";};
192 { label = "expression(expression)";} -> 231 { label = "disjunction(disjunction)";};
193 { label = "inversion(inversion)";} -> 232 { label = "comparison(comparison)";};
194 { label = "disjunction(disjunction)";} -> 233 { label = "conjunction(conjunction)";};
195 { label = "bitwise_or(bitwise_or)";} -> 234 { label = "bitwise_xor(bitwise_xor)";};
196 { label = "simple_stmts(simple_stmts)";} -> 235 { label = "simple1(simple1)";};
196 { label = "simple_stmts(simple_stmts)";} -> 236 { label = "simple2(simple2)";};
196 { label = "simple_stmts(simple_stmts)";} -> 237 { label = "NEWLINE(Newline)";};
197 { label = "simple1(simple1)";} -> 238 { label = "simple_stmt(simple_stmt)";};
201 { label = "primary(primary)";} -> 239 { label = "atom(atom)";};
203 { label = "expression(expression)";} -> 240 { label = "disjunction(disjunction)";};
205 { label = "block(block)";} -> 241 { label = "NEWLINE(Newline)";};
205 { label = "block(block)";} -> 242 { label = "INDENT(Indent)";};
205 { label = "block(block)";} -> 243 { label = "statements(statements)";};
205 { label = "block(block)";} -> 244 { label = "DEDENT(Dedent)";};
206 { label = "return_stmt(return_stmt)";} -> 245 { label = "KEYWORD(return)";};
206 { label = "return_stmt(return_stmt)";} -> 246 { label = "expressions(expressions)";};
207 { label = "bitwise_xor(bitwise_xor)";} -> 247 { label = "bitwise_and(bitwise_and)";};
208 { label = "simple_stmts(simple_stmts)";} -> 248 { label = "simple1(simple1)";};
208 { label = "simple_stmts(simple_stmts)";} -> 249 { label = "simple2(simple2)";};
208 { label = "simple_stmts(simple_stmts)";} -> 250 { label = "NEWLINE(Newline)";};
209 { label = "simple1(simple1)";} -> 251 { label = "simple_stmt(simple_stmt)";};
212 { label = "simple_stmt(simple_stmt)";} -> 252 { label = "assignment(assignment)";};
213 { label = "atom(atom)";} -> 253 { label = "IDENTIFIER(i)";};
214 { label = "disjunction(disjunction)";} -> 254 { label = "conjunction(conjunction)";};
217 { label = "statements(statements)";} -> 255 { label = "statement(statement)";};
220 { label = "expressions(expressions)";} -> 256 { label = "expressions_comma(expressions_comma)";};
221 { label = "simple_stmts(simple_stmts)";} -> 257 { label = "simple1(simple1)";};
221 { label = "simple_stmts(simple_stmts)";} -> 258 { label = "simple2(simple2)";};
221 { label = "simple_stmts(simple_stmts)";} -> 259 { label = "NEWLINE(Newline)";};
222 { label = "simple1(simple1)";} -> 260 { label = "simple_stmt(simple_stmt)";};
225 { label = "simple_stmt(simple_stmt)";} -> 261 { label = "expressions(expressions)";};
226 { label = "assignment(assignment)";} -> 262 { label = "primary(primary)";};
226 { label = "assignment(assignment)";} -> 263 { label = "DELIMITER(:)";};
226 { label = "assignment(assignment)";} -> 264 { label = "expression(expression)";};
226 { label = "assignment(assignment)";} -> 265 { label = "OPERATOR(=)";};
226 { label = "assignment(assignment)";} -> 266 { label = "expressions(expressions)";};
227 { label = "expressions_comma(expressions_comma)";} -> 267 { label = "expression(expression)";};
228 { label = "expression(expression)";} -> 268 { label = "disjunction(disjunction)";};
229 { label = "sum(sum)";} -> 269 { label = "term(term)";};
230 { label = "bitwise_xor(bitwise_xor)";} -> 270 { label = "bitwise_and(bitwise_and)";};
231 { label = "disjunction(disjunction)";} -> 271 { label = "conjunction(conjunction)";};
232 { label = "comparison(comparison)";} -> 272 { label = "bitwise_or(bitwise_or)";};
233 { label = "conjunction(conjunction)";} -> 273 { label = "inversion(inversion)";};
234 { label = "bitwise_xor(bitwise_xor)";} -> 274 { label = "bitwise_and(bitwise_and)";};
235 { label = "simple1(simple1)";} -> 275 { label = "simple_stmt(simple_stmt)";};
238 { label = "simple_stmt(simple_stmt)";} -> 276 { label = "assignment(assignment)";};
239 { label = "atom(atom)";} -> 277 { label = "IDENTIFIER(i)";};
240 { label = "disjunction(disjunction)";} -> 278 { label = "conjunction(conjunction)";};
243 { label = "statements(statements)";} -> 279 { label = "statement(statement)";};
246 { label = "expressions(expressions)";} -> 280 { label = "expressions_comma(expressions_comma)";};
247 { label = "bitwise_and(bitwise_and)";} -> 281 { label = "shift_expr(shift_expr)";};
248 { label = "simple1(simple1)";} -> 282 { label = "simple_stmt(simple_stmt)";};
251 { label = "simple_stmt(simple_stmt)";} -> 283 { label = "assignment(assignment)";};
252 { label = "assignment(assignment)";} -> 284 { label = "primary(primary)";};
252 { label = "assignment(assignment)";} -> 285 { label = "DELIMITER(:)";};
252 { label = "assignment(assignment)";} -> 286 { label = "expression(expression)";};
252 { label = "assignment(assignment)";} -> 287 { label = "OPERATOR(=)";};
252 { label = "assignment(assignment)";} -> 288 { label = "expressions(expressions)";};
254 { label = "conjunction(conjunction)";} -> 289 { label = "inversion(inversion)";};
255 { label = "statement(statement)";} -> 290 { label = "simple_stmts(simple_stmts)";};
256 { label = "expressions_comma(expressions_comma)";} -> 291 { label = "expression(expression)";};
257 { label = "simple1(simple1)";} -> 292 { label = "simple_stmt(simple_stmt)";};
260 { label = "simple_stmt(simple_stmt)";} -> 293 { label = "expressions(expressions)";};
261 { label = "expressions(expressions)";} -> 294 { label = "expressions_comma(expressions_comma)";};
262 { label = "primary(primary)";} -> 295 { label = "atom(atom)";};
264 { label = "expression(expression)";} -> 296 { label = "disjunction(disjunction)";};
266 { label = "expressions(expressions)";} -> 297 { label = "expressions_comma(expressions_comma)";};
267 { label = "expression(expression)";} -> 298 { label = "disjunction(disjunction)";};
268 { label = "disjunction(disjunction)";} -> 299 { label = "conjunction(conjunction)";};
269 { label = "term(term)";} -> 300 { label = "factor(factor)";};
270 { label = "bitwise_and(bitwise_and)";} -> 301 { label = "shift_expr(shift_expr)";};
271 { label = "conjunction(conjunction)";} -> 302 { label = "inversion(inversion)";};
272 { label = "bitwise_or(bitwise_or)";} -> 303 { label = "bitwise_xor(bitwise_xor)";};
273 { label = "inversion(inversion)";} -> 304 { label = "comparison(comparison)";};
274 { label = "bitwise_and(bitwise_and)";} -> 305 { label = "shift_expr(shift_expr)";};
275 { label = "simple_stmt(simple_stmt)";} -> 306 { label = "assignment(assignment)";};
276 { label = "assignment(assignment)";} -> 307 { label = "primary(primary)";};
276 { label = "assignment(assignment)";} -> 308 { label = "DELIMITER(:)";};
276 { label = "assignment(assignment)";} -> 309 { label = "expression(expression)";};
276 { label = "assignment(assignment)";} -> 310 { label = "OPERATOR(=)";};
276 { label = "assignment(assignment)";} -> 311 { label = "expressions(expressions)";};
278 { label = "conjunction(conjunction)";} -> 312 { label = "inversion(inversion)";};
279 { label = "statement(statement)";} -> 313 { label = "compound_stmt(compound_stmt)";};
280 { label = "expressions_comma(expressions_comma)";} -> 314 { label = "expression(expression)";};
281 { label = "shift_expr(shift_expr)";} -> 315 { label = "sum(sum)";};
282 { label = "simple_stmt(simple_stmt)";} -> 316 { label = "assignment(assignment)";};
283 { label = "assignment(assignment)";} -> 317 { label = "primary(primary)";};
283 { label = "assignment(assignment)";} -> 318 { label = "DELIMITER(:)";};
283 { label = "assignment(assignment)";} -> 319 { label = "expression(expression)";};
283 { label = "assignment(assignment)";} -> 320 { label = "OPERATOR(=)";};
283 { label = "assignment(assignment)";} -> 321 { label = "expressions(expressions)";};
284 { label = "primary(primary)";} -> 322 { label = "atom(atom)";};
286 { label = "expression(expression)";} -> 323 { label = "disjunction(disjunction)";};
288 { label = "expressions(expressions)";} -> 324 { label = "expressions_comma(expressions_comma)";};
289 { label = "inversion(inversion)";} -> 325 { label = "comparison(comparison)";};
290 { label = "simple_stmts(simple_stmts)";} -> 326 { label = "simple1(simple1)";};
290 { label = "simple_stmts(simple_stmts)";} -> 327 { label = "simple2(simple2)";};
290 { label = "simple_stmts(simple_stmts)";} -> 328 { label = "NEWLINE(Newline)";};
291 { label = "expression(expression)";} -> 329 { label = "disjunction(disjunction)";};
292 { label = "simple_stmt(simple_stmt)";} -> 330 { label = "assignment(assignment)";};
293 { label = "expressions(expressions)";} -> 331 { label = "expressions_comma(expressions_comma)";};
294 { label = "expressions_comma(expressions_comma)";} -> 332 { label = "expression(expression)";};
295 { label = "atom(atom)";} -> 333 { label = "IDENTIFIER(avg_value)";};
296 { label = "disjunction(disjunction)";} -> 334 { label = "conjunction(conjunction)";};
297 { label = "expressions_comma(expressions_comma)";} -> 335 { label = "expression(expression)";};
298 { label = "disjunction(disjunction)";} -> 336 { label = "conjunction(conjunction)";};
299 { label = "conjunction(conjunction)";} -> 337 { label = "inversion(inversion)";};
300 { label = "factor(factor)";} -> 338 { label = "power(power)";};
301 { label = "shift_expr(shift_expr)";} -> 339 { label = "sum(sum)";};
302 { label = "inversion(inversion)";} -> 340 { label = "comparison(comparison)";};
303 { label = "bitwise_xor(bitwise_xor)";} -> 341 { label = "bitwise_and(bitwise_and)";};
304 { label = "comparison(comparison)";} -> 342 { label = "bitwise_or(bitwise_or)";};
305 { label = "shift_expr(shift_expr)";} -> 343 { label = "sum(sum)";};
306 { label = "assignment(assignment)";} -> 344 { label = "primary(primary)";};
306 { label = "assignment(assignment)";} -> 345 { label = "DELIMITER(:)";};
306 { label = "assignment(assignment)";} -> 346 { label = "expression(expression)";};
306 { label = "assignment(assignment)";} -> 347 { label = "OPERATOR(=)";};
306 { label = "assignment(assignment)";} -> 348 { label = "expressions(expressions)";};
307 { label = "primary(primary)";} -> 349 { label = "atom(atom)";};
309 { label = "expression(expression)";} -> 350 { label = "disjunction(disjunction)";};
311 { label = "expressions(expressions)";} -> 351 { label = "expressions_comma(expressions_comma)";};
312 { label = "inversion(inversion)";} -> 352 { label = "comparison(comparison)";};
313 { label = "compound_stmt(compound_stmt)";} -> 353 { label = "if_stmt(if_stmt)";};
314 { label = "expression(expression)";} -> 354 { label = "disjunction(disjunction)";};
315 { label = "sum(sum)";} -> 355 { label = "term(term)";};
316 { label = "assignment(assignment)";} -> 356 { label = "primary(primary)";};
316 { label = "assignment(assignment)";} -> 357 { label = "DELIMITER(:)";};
316 { label = "assignment(assignment)";} -> 358 { label = "expression(expression)";};
316 { label = "assignment(assignment)";} -> 359 { label = "OPERATOR(=)";};
316 { label = "assignment(assignment)";} -> 360 { label = "expressions(expressions)";};
317 { label = "primary(primary)";} -> 361 { label = "atom(atom)";};
319 { label = "expression(expression)";} -> 362 { label = "disjunction(disjunction)";};
321 { label = "expressions(expressions)";} -> 363 { label = "expressions_comma(expressions_comma)";};
322 { label = "atom(atom)";} -> 364 { label = "IDENTIFIER(i)";};
323 { label = "disjunction(disjunction)";} -> 365 { label = "conjunction(conjunction)";};
324 { label = "expressions_comma(expressions_comma)";} -> 366 { label = "expression(expression)";};
325 { label = "comparison(comparison)";} -> 367 { label = "bitwise_or(bitwise_or)";};
326 { label = "simple1(simple1)";} -> 368 { label = "simple_stmt(simple_stmt)";};
329 { label = "disjunction(disjunction)";} -> 369 { label = "conjunction(conjunction)";};
330 { label = "assignment(assignment)";} -> 370 { label = "primary(primary)";};
330 { label = "assignment(assignment)";} -> 371 { label = "DELIMITER(:)";};
330 { label = "assignment(assignment)";} -> 372 { label = "expression(expression)";};
330 { label = "assignment(assignment)";} -> 373 { label = "OPERATOR(=)";};
330 { label = "assignment(assignment)";} -> 374 { label = "expressions(expressions)";};
331 { label = "expressions_comma(expressions_comma)";} -> 375 { label = "expression(expression)";};
332 { label = "expression(expression)";} -> 376 { label = "disjunction(disjunction)";};
334 { label = "conjunction(conjunction)";} -> 377 { label = "inversion(inversion)";};
335 { label = "expression(expression)";} -> 378 { label = "disjunction(disjunction)";};
336 { label = "conjunction(conjunction)";} -> 379 { label = "inversion(inversion)";};
337 { label = "inversion(inversion)";} -> 380 { label = "comparison(comparison)";};
338 { label = "power(power)";} -> 381 { label = "primary(primary)";};
339 { label = "sum(sum)";} -> 382 { label = "term(term)";};
340 { label = "comparison(comparison)";} -> 383 { label = "bitwise_or(bitwise_or)";};
341 { label = "bitwise_and(bitwise_and)";} -> 384 { label = "shift_expr(shift_expr)";};
342 { label = "bitwise_or(bitwise_or)";} -> 385 { label = "bitwise_xor(bitwise_xor)";};
343 { label = "sum(sum)";} -> 386 { label = "term(term)";};
344 { label = "primary(primary)";} -> 387 { label = "atom(atom)";};
346 { label = "expression(expression)";} -> 388 { label = "disjunction(disjunction)";};
348 { label = "expressions(expressions)";} -> 389 { label = "expressions_comma(expressions_comma)";};
349 { label = "atom(atom)";} -> 390 { label = "IDENTIFIER(i)";};
350 { label = "disjunction(disjunction)";} -> 391 { label = "conjunction(conjunction)";};
351 { label = "expressions_comma(expressions_comma)";} -> 392 { label = "expression(expression)";};
352 { label = "comparison(comparison)";} -> 393 { label = "bitwise_or(bitwise_or)";};
353 { label = "if_stmt(if_stmt)";} -> 394 { label = "KEYWORD(if)";};
353 { label = "if_stmt(if_stmt)";} -> 395 { label = "expression(expression)";};
353 { label = "if_stmt(if_stmt)";} -> 396 { label = "DELIMITER(:)";};
353 { label = "if_stmt(if_stmt)";} -> 397 { label = "block(block)";};
353 { label = "if_stmt(if_stmt)";} -> 398 { label = "elif_stmt(elif_stmt)";};
354 { label = "disjunction(disjunction)";} -> 399 { label = "conjunction(conjunction)";};
355 { label = "term(term)";} -> 400 { label = "factor(factor)";};
356 { label = "primary(primary)";} -> 401 { label = "atom(atom)";};
358 { label = "expression(expression)";} -> 402 { label = "disjunction(disjunction)";};
360 { label = "expressions(expressions)";} -> 403 { label = "expressions_comma(expressions_comma)";};
361 { label = "atom(atom)";} -> 404 { label = "IDENTIFIER(sum)";};
362 { label = "disjunction(disjunction)";} -> 405 { label = "conjunction(conjunction)";};
363 { label = "expressions_comma(expressions_comma)";} -> 406 { label = "expression(expression)";};
365 { label = "conjunction(conjunction)";} -> 407 { label = "inversion(inversion)";};
366 { label = "expression(expression)";} -> 408 { label = "disjunction(disjunction)";};
367 { label = "bitwise_or(bitwise_or)";} -> 409 { label = "bitwise_xor(bitwise_xor)";};
368 { label = "simple_stmt(simple_stmt)";} -> 410 { label = "assignment(assignment)";};
369 { label = "conjunction(conjunction)";} -> 411 { label = "inversion(inversion)";};
370 { label = "primary(primary)";} -> 412 { label = "atom(atom)";};
372 { label = "expression(expression)";} -> 413 { label = "disjunction(disjunction)";};
374 { label = "expressions(expressions)";} -> 414 { label = "expressions_comma(expressions_comma)";};
375 { label = "expression(expression)";} -> 415 { label = "disjunction(disjunction)";};
376 { label = "disjunction(disjunction)";} -> 416 { label = "conjunction(conjunction)";};
377 { label = "inversion(inversion)";} -> 417 { label = "comparison(comparison)";};
378 { label = "disjunction(disjunction)";} -> 418 { label = "conjunction(conjunction)";};
379 { label = "inversion(inversion)";} -> 419 { label = "comparison(comparison)";};
380 { label = "comparison(comparison)";} -> 420 { label = "bitwise_or(bitwise_or)";};
381 { label = "primary(primary)";} -> 421 { label = "atom(atom)";};
382 { label = "term(term)";} -> 422 { label = "factor(factor)";};
383 { label = "bitwise_or(bitwise_or)";} -> 423 { label = "bitwise_xor(bitwise_xor)";};
384 { label = "shift_expr(shift_expr)";} -> 424 { label = "sum(sum)";};
385 { label = "bitwise_xor(bitwise_xor)";} -> 425 { label = "bitwise_and(bitwise_and)";};
386 { label = "term(term)";} -> 426 { label = "factor(factor)";};
387 { label = "atom(atom)";} -> 427 { label = "IDENTIFIER(min_value)";};
388 { label = "disjunction(disjunction)";} -> 428 { label = "conjunction(conjunction)";};
389 { label = "expressions_comma(expressions_comma)";} -> 429 { label = "expression(expression)";};
391 { label = "conjunction(conjunction)";} -> 430 { label = "inversion(inversion)";};
392 { label = "expression(expression)";} -> 431 { label = "disjunction(disjunction)";};
393 { label = "bitwise_or(bitwise_or)";} -> 432 { label = "bitwise_xor(bitwise_xor)";};
395 { label = "expression(expression)";} -> 433 { label = "disjunction(disjunction)";};
397 { label = "block(block)";} -> 434 { label = "NEWLINE(Newline)";};
397 { label = "block(block)";} -> 435 { label = "INDENT(Indent)";};
397 { label = "block(block)";} -> 436 { label = "statements(statements)";};
397 { label = "block(block)";} -> 437 { label = "DEDENT(Dedent)";};
398 { label = "elif_stmt(elif_stmt)";} -> 438 { label = "KEYWORD(elif)";};
398 { label = "elif_stmt(elif_stmt)";} -> 439 { label = "expression(expression)";};
398 { label = "elif_stmt(elif_stmt)";} -> 440 { label = "DELIMITER(:)";};
398 { label = "elif_stmt(elif_stmt)";} -> 441 { label = "block(block)";};
399 { label = "conjunction(conjunction)";} -> 442 { label = "inversion(inversion)";};
400 { label = "factor(factor)";} -> 443 { label = "power(power)";};
401 { label = "atom(atom)";} -> 444 { label = "IDENTIFIER(avg_value)";};
402 { label = "disjunction(disjunction)";} -> 445 { label = "conjunction(conjunction)";};
403 { label = "expressions_comma(expressions_comma)";} -> 446 { label = "expression(expression)";};
405 { label = "conjunction(conjunction)";} -> 447 { label = "inversion(inversion)";};
406 { label = "expression(expression)";} -> 448 { label = "disjunction(disjunction)";};
407 { label = "inversion(inversion)";} -> 449 { label = "comparison(comparison)";};
408 { label = "disjunction(disjunction)";} -> 450 { label = "conjunction(conjunction)";};
409 { label = "bitwise_xor(bitwise_xor)";} -> 451 { label = "bitwise_and(bitwise_and)";};
410 { label = "assignment(assignment)";} -> 452 { label = "primary(primary)";};
410 { label = "assignment(assignment)";} -> 453 { label = "augassign(augassign)";};
410 { label = "assignment(assignment)";} -> 454 { label = "expressions(expressions)";};
411 { label = "inversion(inversion)";} -> 455 { label = "comparison(comparison)";};
412 { label = "atom(atom)";} -> 456 { label = "IDENTIFIER(min_value)";};
413 { label = "disjunction(disjunction)";} -> 457 { label = "conjunction(conjunction)";};
414 { label = "expressions_comma(expressions_comma)";} -> 458 { label = "expression(expression)";};
415 { label = "disjunction(disjunction)";} -> 459 { label = "conjunction(conjunction)";};
416 { label = "conjunction(conjunction)";} -> 460 { label = "inversion(inversion)";};
417 { label = "comparison(comparison)";} -> 461 { label = "bitwise_or(bitwise_or)";};
418 { label = "conjunction(conjunction)";} -> 462 { label = "inversion(inversion)";};
419 { label = "comparison(comparison)";} -> 463 { label = "bitwise_or(bitwise_or)";};
420 { label = "bitwise_or(bitwise_or)";} -> 464 { label = "bitwise_xor(bitwise_xor)";};
421 { label = "atom(atom)";} -> 465 { label = "IDENTIFIER(__name__)";};
422 { label = "factor(factor)";} -> 466 { label = "power(power)";};
423 { label = "bitwise_xor(bitwise_xor)";} -> 467 { label = "bitwise_and(bitwise_and)";};
424 { label = "sum(sum)";} -> 468 { label = "term(term)";};
425 { label = "bitwise_and(bitwise_and)";} -> 469 { label = "shift_expr(shift_expr)";};
426 { label = "factor(factor)";} -> 470 { label = "power(power)";};
428 { label = "conjunction(conjunction)";} -> 471 { label = "inversion(inversion)";};
429 { label = "expression(expression)";} -> 472 { label = "disjunction(disjunction)";};
430 { label = "inversion(inversion)";} -> 473 { label = "comparison(comparison)";};
431 { label = "disjunction(disjunction)";} -> 474 { label = "conjunction(conjunction)";};
432 { label = "bitwise_xor(bitwise_xor)";} -> 475 { label = "bitwise_and(bitwise_and)";};
433 { label = "disjunction(disjunction)";} -> 476 { label = "conjunction(conjunction)";};
436 { label = "statements(statements)";} -> 477 { label = "statement(statement)";};
439 { label = "expression(expression)";} -> 478 { label = "disjunction(disjunction)";};
441 { label = "block(block)";} -> 479 { label = "NEWLINE(Newline)";};
441 { label = "block(block)";} -> 480 { label = "INDENT(Indent)";};
441 { label = "block(block)";} -> 481 { label = "statements(statements)";};
441 { label = "block(block)";} -> 482 { label = "DEDENT(Dedent)";};
442 { label = "inversion(inversion)";} -> 483 { label = "comparison(comparison)";};
443 { label = "power(power)";} -> 484 { label = "primary(primary)";};
445 { label = "conjunction(conjunction)";} -> 485 { label = "inversion(inversion)";};
446 { label = "expression(expression)";} -> 486 { label = "disjunction(disjunction)";};
447 { label = "inversion(inversion)";} -> 487 { label = "comparison(comparison)";};
448 { label = "disjunction(disjunction)";} -> 488 { label = "conjunction(conjunction)";};
449 { label = "comparison(comparison)";} -> 489 { label = "bitwise_or(bitwise_or)";};
450 { label = "conjunction(conjunction)";} -> 490 { label = "inversion(inversion)";};
451 { label = "bitwise_and(bitwise_and)";} -> 491 { label = "shift_expr(shift_expr)";};
452 { label = "primary(primary)";} -> 492 { label = "atom(atom)";};
453 { label = "augassign(augassign)";} -> 493 { label = "OPERATOR(+=)";};
454 { label = "expressions(expressions)";} -> 494 { label = "expressions_comma(expressions_comma)";};
455 { label = "comparison(comparison)";} -> 495 { label = "bitwise_or(bitwise_or)";};
457 { label = "conjunction(conjunction)";} -> 496 { label = "inversion(inversion)";};
458 { label = "expression(expression)";} -> 497 { label = "disjunction(disjunction)";};
459 { label = "conjunction(conjunction)";} -> 498 { label = "inversion(inversion)";};
460 { label = "inversion(inversion)";} -> 499 { label = "comparison(comparison)";};
461 { label = "bitwise_or(bitwise_or)";} -> 500 { label = "bitwise_xor(bitwise_xor)";};
462 { label = "inversion(inversion)";} -> 501 { label = "comparison(comparison)";};
463 { label = "bitwise_or(bitwise_or)";} -> 502 { label = "bitwise_xor(bitwise_xor)";};
464 { label = "bitwise_xor(bitwise_xor)";} -> 503 { label = "bitwise_and(bitwise_and)";};
466 { label = "power(power)";} -> 504 { label = "primary(primary)";};
467 { label = "bitwise_and(bitwise_and)";} -> 505 { label = "shift_expr(shift_expr)";};
468 { label = "term(term)";} -> 506 { label = "factor(factor)";};
469 { label = "shift_expr(shift_expr)";} -> 507 { label = "sum(sum)";};
470 { label = "power(power)";} -> 508 { label = "primary(primary)";};
471 { label = "inversion(inversion)";} -> 509 { label = "comparison(comparison)";};
472 { label = "disjunction(disjunction)";} -> 510 { label = "conjunction(conjunction)";};
473 { label = "comparison(comparison)";} -> 511 { label = "bitwise_or(bitwise_or)";};
474 { label = "conjunction(conjunction)";} -> 512 { label = "inversion(inversion)";};
475 { label = "bitwise_and(bitwise_and)";} -> 513 { label = "shift_expr(shift_expr)";};
476 { label = "conjunction(conjunction)";} -> 514 { label = "inversion(inversion)";};
477 { label = "statement(statement)";} -> 515 { label = "simple_stmts(simple_stmts)";};
478 { label = "disjunction(disjunction)";} -> 516 { label = "conjunction(conjunction)";};
481 { label = "statements(statements)";} -> 517 { label = "statement(statement)";};
483 { label = "comparison(comparison)";} -> 518 { label = "bitwise_or(bitwise_or)";};
484 { label = "primary(primary)";} -> 519 { label = "atom(atom)";};
485 { label = "inversion(inversion)";} -> 520 { label = "comparison(comparison)";};
486 { label = "disjunction(disjunction)";} -> 521 { label = "conjunction(conjunction)";};
487 { label = "comparison(comparison)";} -> 522 { label = "bitwise_or(bitwise_or)";};
488 { label = "conjunction(conjunction)";} -> 523 { label = "inversion(inversion)";};
489 { label = "bitwise_or(bitwise_or)";} -> 524 { label = "bitwise_xor(bitwise_xor)";};
490 { label = "inversion(inversion)";} -> 525 { label = "comparison(comparison)";};
491 { label = "shift_expr(shift_expr)";} -> 526 { label = "sum(sum)";};
492 { label = "atom(atom)";} -> 527 { label = "IDENTIFIER(sum)";};
494 { label = "expressions_comma(expressions_comma)";} -> 528 { label = "expression(expression)";};
495 { label = "bitwise_or(bitwise_or)";} -> 529 { label = "bitwise_xor(bitwise_xor)";};
496 { label = "inversion(inversion)";} -> 530 { label = "comparison(comparison)";};
497 { label = "disjunction(disjunction)";} -> 531 { label = "conjunction(conjunction)";};
498 { label = "inversion(inversion)";} -> 532 { label = "comparison(comparison)";};
499 { label = "comparison(comparison)";} -> 533 { label = "bitwise_or(bitwise_or)";};
500 { label = "bitwise_xor(bitwise_xor)";} -> 534 { label = "bitwise_and(bitwise_and)";};
501 { label = "comparison(comparison)";} -> 535 { label = "bitwise_or(bitwise_or)";};
502 { label = "bitwise_xor(bitwise_xor)";} -> 536 { label = "bitwise_and(bitwise_and)";};
503 { label = "bitwise_and(bitwise_and)";} -> 537 { label = "shift_expr(shift_expr)";};
504 { label = "primary(primary)";} -> 538 { label = "atom(atom)";};
505 { label = "shift_expr(shift_expr)";} -> 539 { label = "sum(sum)";};
506 { label = "factor(factor)";} -> 540 { label = "power(power)";};
507 { label = "sum(sum)";} -> 541 { label = "term(term)";};
508 { label = "primary(primary)";} -> 542 { label = "atom(atom)";};
509 { label = "comparison(comparison)";} -> 543 { label = "bitwise_or(bitwise_or)";};
510 { label = "conjunction(conjunction)";} -> 544 { label = "inversion(inversion)";};
511 { label = "bitwise_or(bitwise_or)";} -> 545 { label = "bitwise_xor(bitwise_xor)";};
512 { label = "inversion(inversion)";} -> 546 { label = "comparison(comparison)";};
513 { label = "shift_expr(shift_expr)";} -> 547 { label = "sum(sum)";};
514 { label = "inversion(inversion)";} -> 548 { label = "OPERATOR(not)";};
514 { label = "inversion(inversion)";} -> 549 { label = "inversion(inversion)";};
515 { label = "simple_stmts(simple_stmts)";} -> 550 { label = "simple1(simple1)";};
515 { label = "simple_stmts(simple_stmts)";} -> 551 { label = "simple2(simple2)";};
515 { label = "simple_stmts(simple_stmts)";} -> 552 { label = "NEWLINE(Newline)";};
516 { label = "conjunction(conjunction)";} -> 553 { label = "inversion(inversion)";};
517 { label = "statement(statement)";} -> 554 { label = "simple_stmts(simple_stmts)";};
518 { label = "bitwise_or(bitwise_or)";} -> 555 { label = "bitwise_xor(bitwise_xor)";};
519 { label = "atom(atom)";} -> 556 { label = "IDENTIFIER(float)";};
520 { label = "comparison(comparison)";} -> 557 { label = "bitwise_or(bitwise_or)";};
521 { label = "conjunction(conjunction)";} -> 558 { label = "inversion(inversion)";};
522 { label = "bitwise_or(bitwise_or)";} -> 559 { label = "bitwise_xor(bitwise_xor)";};
523 { label = "inversion(inversion)";} -> 560 { label = "comparison(comparison)";};
524 { label = "bitwise_xor(bitwise_xor)";} -> 561 { label = "bitwise_and(bitwise_and)";};
525 { label = "comparison(comparison)";} -> 562 { label = "bitwise_or(bitwise_or)";};
526 { label = "sum(sum)";} -> 563 { label = "term(term)";};
528 { label = "expression(expression)";} -> 564 { label = "disjunction(disjunction)";};
529 { label = "bitwise_xor(bitwise_xor)";} -> 565 { label = "bitwise_and(bitwise_and)";};
530 { label = "comparison(comparison)";} -> 566 { label = "bitwise_or(bitwise_or)";};
531 { label = "conjunction(conjunction)";} -> 567 { label = "inversion(inversion)";};
532 { label = "comparison(comparison)";} -> 568 { label = "bitwise_or(bitwise_or)";};
533 { label = "bitwise_or(bitwise_or)";} -> 569 { label = "bitwise_xor(bitwise_xor)";};
534 { label = "bitwise_and(bitwise_and)";} -> 570 { label = "shift_expr(shift_expr)";};
535 { label = "bitwise_or(bitwise_or)";} -> 571 { label = "bitwise_xor(bitwise_xor)";};
536 { label = "bitwise_and(bitwise_and)";} -> 572 { label = "shift_expr(shift_expr)";};
537 { label = "shift_expr(shift_expr)";} -> 573 { label = "sum(sum)";};
538 { label = "atom(atom)";} -> 574 { label = "strings(strings)";};
539 { label = "sum(sum)";} -> 575 { label = "term(term)";};
540 { label = "power(power)";} -> 576 { label = "primary(primary)";};
541 { label = "term(term)";} -> 577 { label = "factor(factor)";};
542 { label = "atom(atom)";} -> 578 { label = "IDENTIFIER(float)";};
543 { label = "bitwise_or(bitwise_or)";} -> 579 { label = "bitwise_xor(bitwise_xor)";};
544 { label = "inversion(inversion)";} -> 580 { label = "comparison(comparison)";};
545 { label = "bitwise_xor(bitwise_xor)";} -> 581 { label = "bitwise_and(bitwise_and)";};
546 { label = "comparison(comparison)";} -> 582 { label = "bitwise_or(bitwise_or)";};
547 { label = "sum(sum)";} -> 583 { label = "term(term)";};
549 { label = "inversion(inversion)";} -> 584 { label = "comparison(comparison)";};
550 { label = "simple1(simple1)";} -> 585 { label = "simple_stmt(simple_stmt)";};
553 { label = "inversion(inversion)";} -> 586 { label = "comparison(comparison)";};
554 { label = "simple_stmts(simple_stmts)";} -> 587 { label = "simple1(simple1)";};
554 { label = "simple_stmts(simple_stmts)";} -> 588 { label = "simple2(simple2)";};
554 { label = "simple_stmts(simple_stmts)";} -> 589 { label = "NEWLINE(Newline)";};
555 { label = "bitwise_xor(bitwise_xor)";} -> 590 { label = "bitwise_and(bitwise_and)";};
557 { label = "bitwise_or(bitwise_or)";} -> 591 { label = "bitwise_xor(bitwise_xor)";};
558 { label = "inversion(inversion)";} -> 592 { label = "comparison(comparison)";};
559 { label = "bitwise_xor(bitwise_xor)";} -> 593 { label = "bitwise_and(bitwise_and)";};
560 { label = "comparison(comparison)";} -> 594 { label = "bitwise_or(bitwise_or)";};
561 { label = "bitwise_and(bitwise_and)";} -> 595 { label = "shift_expr(shift_expr)";};
562 { label = "bitwise_or(bitwise_or)";} -> 596 { label = "bitwise_xor(bitwise_xor)";};
563 { label = "term(term)";} -> 597 { label = "factor(factor)";};
564 { label = "disjunction(disjunction)";} -> 598 { label = "conjunction(conjunction)";};
565 { label = "bitwise_and(bitwise_and)";} -> 599 { label = "shift_expr(shift_expr)";};
566 { label = "bitwise_or(bitwise_or)";} -> 600 { label = "bitwise_xor(bitwise_xor)";};
567 { label = "inversion(inversion)";} -> 601 { label = "comparison(comparison)";};
568 { label = "bitwise_or(bitwise_or)";} -> 602 { label = "bitwise_xor(bitwise_xor)";};
569 { label = "bitwise_xor(bitwise_xor)";} -> 603 { label = "bitwise_and(bitwise_and)";};
570 { label = "shift_expr(shift_expr)";} -> 604 { label = "sum(sum)";};
571 { label = "bitwise_xor(bitwise_xor)";} -> 605 { label = "bitwise_and(bitwise_and)";};
572 { label = "shift_expr(shift_expr)";} -> 606 { label = "sum(sum)";};
573 { label = "sum(sum)";} -> 607 { label = "term(term)";};
574 { label = "strings(strings)";} -> 608 { label = "string(string)";};
575 { label = "term(term)";} -> 609 { label = "factor(factor)";};
576 { label = "primary(primary)";} -> 610 { label = "primary(primary)";};
576 { label = "primary(primary)";} -> 611 { label = "DELIMITER([)";};
576 { label = "primary(primary)";} -> 612 { label = "slices(slices)";};
576 { label = "primary(primary)";} -> 613 { label = "DELIMITER(])";};
577 { label = "factor(factor)";} -> 614 { label = "power(power)";};
579 { label = "bitwise_xor(bitwise_xor)";} -> 615 { label = "bitwise_and(bitwise_and)";};
580 { label = "comparison(comparison)";} -> 616 { label = "bitwise_or(bitwise_or)";};
581 { label = "bitwise_and(bitwise_and)";} -> 617 { label = "shift_expr(shift_expr)";};
582 { label = "bitwise_or(bitwise_or)";} -> 618 { label = "bitwise_xor(bitwise_xor)";};
583 { label = "term(term)";} -> 619 { label = "factor(factor)";};
584 { label = "comparison(comparison)";} -> 620 { label = "bitwise_or(bitwise_or)";};
585 { label = "simple_stmt(simple_stmt)";} -> 621 { label = "assignment(assignment)";};
586 { label = "comparison(comparison)";} -> 622 { label = "bitwise_or(bitwise_or)";};
586 { label = "comparison(comparison)";} -> 623 { label = "many_compare_op_bitwise_or_pairs(many_compare_op_bitwise_or_pairs)";};
587 { label = "simple1(simple1)";} -> 624 { label = "simple_stmt(simple_stmt)";};
590 { label = "bitwise_and(bitwise_and)";} -> 625 { label = "shift_expr(shift_expr)";};
591 { label = "bitwise_xor(bitwise_xor)";} -> 626 { label = "bitwise_and(bitwise_and)";};
592 { label = "comparison(comparison)";} -> 627 { label = "bitwise_or(bitwise_or)";};
593 { label = "bitwise_and(bitwise_and)";} -> 628 { label = "shift_expr(shift_expr)";};
594 { label = "bitwise_or(bitwise_or)";} -> 629 { label = "bitwise_xor(bitwise_xor)";};
595 { label = "shift_expr(shift_expr)";} -> 630 { label = "sum(sum)";};
596 { label = "bitwise_xor(bitwise_xor)";} -> 631 { label = "bitwise_and(bitwise_and)";};
597 { label = "factor(factor)";} -> 632 { label = "power(power)";};
598 { label = "conjunction(conjunction)";} -> 633 { label = "inversion(inversion)";};
599 { label = "shift_expr(shift_expr)";} -> 634 { label = "sum(sum)";};
600 { label = "bitwise_xor(bitwise_xor)";} -> 635 { label = "bitwise_and(bitwise_and)";};
601 { label = "comparison(comparison)";} -> 636 { label = "bitwise_or(bitwise_or)";};
602 { label = "bitwise_xor(bitwise_xor)";} -> 637 { label = "bitwise_and(bitwise_and)";};
603 { label = "bitwise_and(bitwise_and)";} -> 638 { label = "shift_expr(shift_expr)";};
604 { label = "sum(sum)";} -> 639 { label = "term(term)";};
605 { label = "bitwise_and(bitwise_and)";} -> 640 { label = "shift_expr(shift_expr)";};
606 { label = "sum(sum)";} -> 641 { label = "term(term)";};
607 { label = "term(term)";} -> 642 { label = "factor(factor)";};
608 { label = "string(string)";} -> 643 { label = "STRING_LITERAL("__main__")";};
609 { label = "factor(factor)";} -> 644 { label = "power(power)";};
610 { label = "primary(primary)";} -> 645 { label = "atom(atom)";};
612 { label = "slices(slices)";} -> 646 { label = "slice(slice)";};
614 { label = "power(power)";} -> 647 { label = "primary(primary)";};
615 { label = "bitwise_and(bitwise_and)";} -> 648 { label = "shift_expr(shift_expr)";};
616 { label = "bitwise_or(bitwise_or)";} -> 649 { label = "bitwise_xor(bitwise_xor)";};
617 { label = "shift_expr(shift_expr)";} -> 650 { label = "sum(sum)";};
618 { label = "bitwise_xor(bitwise_xor)";} -> 651 { label = "bitwise_and(bitwise_and)";};
619 { label = "factor(factor)";} -> 652 { label = "power(power)";};
620 { label = "bitwise_or(bitwise_or)";} -> 653 { label = "bitwise_xor(bitwise_xor)";};
621 { label = "assignment(assignment)";} -> 654 { label = "multi_targets_assgn(multi_targets_assgn)";};
621 { label = "assignment(assignment)";} -> 655 { label = "expressions(expressions)";};
622 { label = "bitwise_or(bitwise_or)";} -> 656 { label = "bitwise_xor(bitwise_xor)";};
623 { label = "many_compare_op_bitwise_or_pairs(many_compare_op_bitwise_or_pairs)";} -> 657 { label = "compare_op_bitwise_or_pair(compare_op_bitwise_or_pair)";};
624 { label = "simple_stmt(simple_stmt)";} -> 658 { label = "assignment(assignment)";};
625 { label = "shift_expr(shift_expr)";} -> 659 { label = "sum(sum)";};
626 { label = "bitwise_and(bitwise_and)";} -> 660 { label = "shift_expr(shift_expr)";};
627 { label = "bitwise_or(bitwise_or)";} -> 661 { label = "bitwise_xor(bitwise_xor)";};
628 { label = "shift_expr(shift_expr)";} -> 662 { label = "sum(sum)";};
629 { label = "bitwise_xor(bitwise_xor)";} -> 663 { label = "bitwise_and(bitwise_and)";};
630 { label = "sum(sum)";} -> 664 { label = "term(term)";};
631 { label = "bitwise_and(bitwise_and)";} -> 665 { label = "shift_expr(shift_expr)";};
632 { label = "power(power)";} -> 666 { label = "primary(primary)";};
633 { label = "inversion(inversion)";} -> 667 { label = "comparison(comparison)";};
634 { label = "sum(sum)";} -> 668 { label = "term(term)";};
635 { label = "bitwise_and(bitwise_and)";} -> 669 { label = "shift_expr(shift_expr)";};
636 { label = "bitwise_or(bitwise_or)";} -> 670 { label = "bitwise_xor(bitwise_xor)";};
637 { label = "bitwise_and(bitwise_and)";} -> 671 { label = "shift_expr(shift_expr)";};
638 { label = "shift_expr(shift_expr)";} -> 672 { label = "sum(sum)";};
639 { label = "term(term)";} -> 673 { label = "factor(factor)";};
640 { label = "shift_expr(shift_expr)";} -> 674 { label = "sum(sum)";};
641 { label = "term(term)";} -> 675 { label = "factor(factor)";};
642 { label = "factor(factor)";} -> 676 { label = "power(power)";};
644 { label = "power(power)";} -> 677 { label = "primary(primary)";};
645 { label = "atom(atom)";} -> 678 { label = "IDENTIFIER(list)";};
646 { label = "slice(slice)";} -> 679 { label = "expression(expression)";};
647 { label = "primary(primary)";} -> 680 { label = "atom(atom)";};
648 { label = "shift_expr(shift_expr)";} -> 681 { label = "sum(sum)";};
649 { label = "bitwise_xor(bitwise_xor)";} -> 682 { label = "bitwise_and(bitwise_and)";};
650 { label = "sum(sum)";} -> 683 { label = "term(term)";};
651 { label = "bitwise_and(bitwise_and)";} -> 684 { label = "shift_expr(shift_expr)";};
652 { label = "power(power)";} -> 685 { label = "primary(primary)";};
653 { label = "bitwise_xor(bitwise_xor)";} -> 686 { label = "bitwise_and(bitwise_and)";};
654 { label = "multi_targets_assgn(multi_targets_assgn)";} -> 687 { label = "primary(primary)";};
654 { label = "multi_targets_assgn(multi_targets_assgn)";} -> 688 { label = "OPERATOR(=)";};
655 { label = "expressions(expressions)";} -> 689 { label = "expressions_comma(expressions_comma)";};
656 { label = "bitwise_xor(bitwise_xor)";} -> 690 { label = "bitwise_and(bitwise_and)";};
657 { label = "compare_op_bitwise_or_pair(compare_op_bitwise_or_pair)";} -> 691 { label = "lt_bitwise_or(lt_bitwise_or)";};
658 { label = "assignment(assignment)";} -> 692 { label = "multi_targets_assgn(multi_targets_assgn)";};
658 { label = "assignment(assignment)";} -> 693 { label = "expressions(expressions)";};
659 { label = "sum(sum)";} -> 694 { label = "term(term)";};
660 { label = "shift_expr(shift_expr)";} -> 695 { label = "sum(sum)";};
661 { label = "bitwise_xor(bitwise_xor)";} -> 696 { label = "bitwise_and(bitwise_and)";};
662 { label = "sum(sum)";} -> 697 { label = "term(term)";};
663 { label = "bitwise_and(bitwise_and)";} -> 698 { label = "shift_expr(shift_expr)";};
664 { label = "term(term)";} -> 699 { label = "factor(factor)";};
665 { label = "shift_expr(shift_expr)";} -> 700 { label = "sum(sum)";};
666 { label = "primary(primary)";} -> 701 { label = "primary(primary)";};
666 { label = "primary(primary)";} -> 702 { label = "DELIMITER(()";};
666 { label = "primary(primary)";} -> 703 { label = "arguments(arguments)";};
666 { label = "primary(primary)";} -> 704 { label = "DELIMITER())";};
667 { label = "comparison(comparison)";} -> 705 { label = "bitwise_or(bitwise_or)";};
668 { label = "term(term)";} -> 706 { label = "term(term)";};
668 { label = "term(term)";} -> 707 { label = "OPERATOR(/)";};
668 { label = "term(term)";} -> 708 { label = "factor(factor)";};
669 { label = "shift_expr(shift_expr)";} -> 709 { label = "sum(sum)";};
670 { label = "bitwise_xor(bitwise_xor)";} -> 710 { label = "bitwise_and(bitwise_and)";};
671 { label = "shift_expr(shift_expr)";} -> 711 { label = "sum(sum)";};
672 { label = "sum(sum)";} -> 712 { label = "term(term)";};
673 { label = "factor(factor)";} -> 713 { label = "power(power)";};
674 { label = "sum(sum)";} -> 714 { label = "term(term)";};
675 { label = "factor(factor)";} -> 715 { label = "power(power)";};
676 { label = "power(power)";} -> 716 { label = "primary(primary)";};
677 { label = "primary(primary)";} -> 717 { label = "primary(primary)";};
677 { label = "primary(primary)";} -> 718 { label = "DELIMITER(()";};
677 { label = "primary(primary)";} -> 719 { label = "DELIMITER())";};
679 { label = "expression(expression)";} -> 720 { label = "disjunction(disjunction)";};
680 { label = "atom(atom)";} -> 721 { label = "list(list)";};
681 { label = "sum(sum)";} -> 722 { label = "term(term)";};
682 { label = "bitwise_and(bitwise_and)";} -> 723 { label = "shift_expr(shift_expr)";};
683 { label = "term(term)";} -> 724 { label = "factor(factor)";};
684 { label = "shift_expr(shift_expr)";} -> 725 { label = "sum(sum)";};
685 { label = "primary(primary)";} -> 726 { label = "primary(primary)";};
685 { label = "primary(primary)";} -> 727 { label = "DELIMITER(()";};
685 { label = "primary(primary)";} -> 728 { label = "arguments(arguments)";};
685 { label = "primary(primary)";} -> 729 { label = "DELIMITER())";};
686 { label = "bitwise_and(bitwise_and)";} -> 730 { label = "shift_expr(shift_expr)";};
687 { label = "primary(primary)";} -> 731 { label = "atom(atom)";};
689 { label = "expressions_comma(expressions_comma)";} -> 732 { label = "expression(expression)";};
690 { label = "bitwise_and(bitwise_and)";} -> 733 { label = "shift_expr(shift_expr)";};
691 { label = "lt_bitwise_or(lt_bitwise_or)";} -> 734 { label = "OPERATOR(<)";};
691 { label = "lt_bitwise_or(lt_bitwise_or)";} -> 735 { label = "bitwise_or(bitwise_or)";};
692 { label = "multi_targets_assgn(multi_targets_assgn)";} -> 736 { label = "primary(primary)";};
692 { label = "multi_targets_assgn(multi_targets_assgn)";} -> 737 { label = "OPERATOR(=)";};
693 { label = "expressions(expressions)";} -> 738 { label = "expressions_comma(expressions_comma)";};
694 { label = "term(term)";} -> 739 { label = "factor(factor)";};
695 { label = "sum(sum)";} -> 740 { label = "term(term)";};
696 { label = "bitwise_and(bitwise_and)";} -> 741 { label = "shift_expr(shift_expr)";};
697 { label = "term(term)";} -> 742 { label = "factor(factor)";};
698 { label = "shift_expr(shift_expr)";} -> 743 { label = "sum(sum)";};
699 { label = "factor(factor)";} -> 744 { label = "power(power)";};
700 { label = "sum(sum)";} -> 745 { label = "term(term)";};
701 { label = "primary(primary)";} -> 746 { label = "atom(atom)";};
703 { label = "arguments(arguments)";} -> 747 { label = "expressions_comma(expressions_comma)";};
705 { label = "bitwise_or(bitwise_or)";} -> 748 { label = "bitwise_xor(bitwise_xor)";};
706 { label = "term(term)";} -> 749 { label = "factor(factor)";};
708 { label = "factor(factor)";} -> 750 { label = "power(power)";};
709 { label = "sum(sum)";} -> 751 { label = "term(term)";};
710 { label = "bitwise_and(bitwise_and)";} -> 752 { label = "shift_expr(shift_expr)";};
711 { label = "sum(sum)";} -> 753 { label = "term(term)";};
712 { label = "term(term)";} -> 754 { label = "factor(factor)";};
713 { label = "power(power)";} -> 755 { label = "primary(primary)";};
714 { label = "term(term)";} -> 756 { label = "factor(factor)";};
715 { label = "power(power)";} -> 757 { label = "primary(primary)";};
716 { label = "primary(primary)";} -> 758 { label = "primary(primary)";};
716 { label = "primary(primary)";} -> 759 { label = "DELIMITER(()";};
716 { label = "primary(primary)";} -> 760 { label = "arguments(arguments)";};
716 { label = "primary(primary)";} -> 761 { label = "DELIMITER())";};
717 { label = "primary(primary)";} -> 762 { label = "atom(atom)";};
720 { label = "disjunction(disjunction)";} -> 763 { label = "conjunction(conjunction)";};
721 { label = "list(list)";} -> 764 { label = "DELIMITER([)";};
721 { label = "list(list)";} -> 765 { label = "expressions(expressions)";};
721 { label = "list(list)";} -> 766 { label = "DELIMITER(])";};
722 { label = "term(term)";} -> 767 { label = "factor(factor)";};
723 { label = "shift_expr(shift_expr)";} -> 768 { label = "sum(sum)";};
724 { label = "factor(factor)";} -> 769 { label = "power(power)";};
725 { label = "sum(sum)";} -> 770 { label = "term(term)";};
726 { label = "primary(primary)";} -> 771 { label = "atom(atom)";};
728 { label = "arguments(arguments)";} -> 772 { label = "expressions_comma(expressions_comma)";};
730 { label = "shift_expr(shift_expr)";} -> 773 { label = "sum(sum)";};
731 { label = "atom(atom)";} -> 774 { label = "IDENTIFIER(min_value)";};
732 { label = "expression(expression)";} -> 775 { label = "disjunction(disjunction)";};
733 { label = "shift_expr(shift_expr)";} -> 776 { label = "sum(sum)";};
735 { label = "bitwise_or(bitwise_or)";} -> 777 { label = "bitwise_xor(bitwise_xor)";};
736 { label = "primary(primary)";} -> 778 { label = "atom(atom)";};
738 { label = "expressions_comma(expressions_comma)";} -> 779 { label = "expression(expression)";};
739 { label = "factor(factor)";} -> 780 { label = "power(power)";};
740 { label = "term(term)";} -> 781 { label = "factor(factor)";};
741 { label = "shift_expr(shift_expr)";} -> 782 { label = "sum(sum)";};
742 { label = "factor(factor)";} -> 783 { label = "power(power)";};
743 { label = "sum(sum)";} -> 784 { label = "term(term)";};
744 { label = "power(power)";} -> 785 { label = "primary(primary)";};
745 { label = "term(term)";} -> 786 { label = "factor(factor)";};
746 { label = "atom(atom)";} -> 787 { label = "IDENTIFIER(range)";};
747 { label = "expressions_comma(expressions_comma)";} -> 788 { label = "expression(expression)";};
748 { label = "bitwise_xor(bitwise_xor)";} -> 789 { label = "bitwise_and(bitwise_and)";};
749 { label = "factor(factor)";} -> 790 { label = "power(power)";};
750 { label = "power(power)";} -> 791 { label = "primary(primary)";};
751 { label = "term(term)";} -> 792 { label = "factor(factor)";};
752 { label = "shift_expr(shift_expr)";} -> 793 { label = "sum(sum)";};
753 { label = "term(term)";} -> 794 { label = "factor(factor)";};
754 { label = "factor(factor)";} -> 795 { label = "power(power)";};
755 { label = "primary(primary)";} -> 796 { label = "atom(atom)";};
756 { label = "factor(factor)";} -> 797 { label = "power(power)";};
757 { label = "primary(primary)";} -> 798 { label = "primary(primary)";};
757 { label = "primary(primary)";} -> 799 { label = "DELIMITER(()";};
757 { label = "primary(primary)";} -> 800 { label = "arguments(arguments)";};
757 { label = "primary(primary)";} -> 801 { label = "DELIMITER())";};
758 { label = "primary(primary)";} -> 802 { label = "atom(atom)";};
760 { label = "arguments(arguments)";} -> 803 { label = "expressions_comma(expressions_comma)";};
762 { label = "atom(atom)";} -> 804 { label = "IDENTIFIER(main)";};
763 { label = "conjunction(conjunction)";} -> 805 { label = "inversion(inversion)";};
765 { label = "expressions(expressions)";} -> 806 { label = "expressions_comma(expressions_comma)";};
767 { label = "factor(factor)";} -> 807 { label = "power(power)";};
768 { label = "sum(sum)";} -> 808 { label = "term(term)";};
769 { label = "power(power)";} -> 809 { label = "primary(primary)";};
770 { label = "term(term)";} -> 810 { label = "factor(factor)";};
771 { label = "atom(atom)";} -> 811 { label = "IDENTIFIER(range)";};
772 { label = "expressions_comma(expressions_comma)";} -> 812 { label = "expression(expression)";};
773 { label = "sum(sum)";} -> 813 { label = "term(term)";};
775 { label = "disjunction(disjunction)";} -> 814 { label = "conjunction(conjunction)";};
776 { label = "sum(sum)";} -> 815 { label = "term(term)";};
777 { label = "bitwise_xor(bitwise_xor)";} -> 816 { label = "bitwise_and(bitwise_and)";};
778 { label = "atom(atom)";} -> 817 { label = "IDENTIFIER(min_value)";};
779 { label = "expression(expression)";} -> 818 { label = "disjunction(disjunction)";};
780 { label = "power(power)";} -> 819 { label = "primary(primary)";};
781 { label = "factor(factor)";} -> 820 { label = "power(power)";};
782 { label = "sum(sum)";} -> 821 { label = "term(term)";};
783 { label = "power(power)";} -> 822 { label = "primary(primary)";};
784 { label = "term(term)";} -> 823 { label = "factor(factor)";};
785 { label = "primary(primary)";} -> 824 { label = "atom(atom)";};
786 { label = "factor(factor)";} -> 825 { label = "power(power)";};
788 { label = "expression(expression)";} -> 826 { label = "disjunction(disjunction)";};
789 { label = "bitwise_and(bitwise_and)";} -> 827 { label = "shift_expr(shift_expr)";};
790 { label = "power(power)";} -> 828 { label = "primary(primary)";};
791 { label = "primary(primary)";} -> 829 { label = "primary(primary)";};
791 { label = "primary(primary)";} -> 830 { label = "DELIMITER(()";};
791 { label = "primary(primary)";} -> 831 { label = "arguments(arguments)";};
791 { label = "primary(primary)";} -> 832 { label = "DELIMITER())";};
792 { label = "factor(factor)";} -> 833 { label = "power(power)";};
793 { label = "sum(sum)";} -> 834 { label = "term(term)";};
794 { label = "factor(factor)";} -> 835 { label = "power(power)";};
795 { label = "power(power)";} -> 836 { label = "primary(primary)";};
796 { label = "atom(atom)";} -> 837 { label = "IDENTIFIER(float)";};
797 { label = "power(power)";} -> 838 { label = "primary(primary)";};
798 { label = "primary(primary)";} -> 839 { label = "atom(atom)";};
800 { label = "arguments(arguments)";} -> 840 { label = "expressions_comma(expressions_comma)";};
802 { label = "atom(atom)";} -> 841 { label = "IDENTIFIER(print)";};
803 { label = "expressions_comma(expressions_comma)";} -> 842 { label = "expression(expression)";};
805 { label = "inversion(inversion)";} -> 843 { label = "comparison(comparison)";};
806 { label = "expressions_comma(expressions_comma)";} -> 844 { label = "expressions_comma(expressions_comma)";};
806 { label = "expressions_comma(expressions_comma)";} -> 845 { label = "DELIMITER(,)";};
806 { label = "expressions_comma(expressions_comma)";} -> 846 { label = "expression(expression)";};
807 { label = "power(power)";} -> 847 { label = "primary(primary)";};
808 { label = "term(term)";} -> 848 { label = "factor(factor)";};
809 { label = "primary(primary)";} -> 849 { label = "atom(atom)";};
810 { label = "factor(factor)";} -> 850 { label = "power(power)";};
812 { label = "expression(expression)";} -> 851 { label = "disjunction(disjunction)";};
813 { label = "term(term)";} -> 852 { label = "factor(factor)";};
814 { label = "conjunction(conjunction)";} -> 853 { label = "inversion(inversion)";};
815 { label = "term(term)";} -> 854 { label = "factor(factor)";};
816 { label = "bitwise_and(bitwise_and)";} -> 855 { label = "shift_expr(shift_expr)";};
818 { label = "disjunction(disjunction)";} -> 856 { label = "conjunction(conjunction)";};
819 { label = "primary(primary)";} -> 857 { label = "atom(atom)";};
820 { label = "power(power)";} -> 858 { label = "primary(primary)";};
821 { label = "term(term)";} -> 859 { label = "factor(factor)";};
822 { label = "primary(primary)";} -> 860 { label = "atom(atom)";};
823 { label = "factor(factor)";} -> 861 { label = "power(power)";};
824 { label = "atom(atom)";} -> 862 { label = "IDENTIFIER(int)";};
825 { label = "power(power)";} -> 863 { label = "primary(primary)";};
826 { label = "disjunction(disjunction)";} -> 864 { label = "conjunction(conjunction)";};
827 { label = "shift_expr(shift_expr)";} -> 865 { label = "sum(sum)";};
828 { label = "primary(primary)";} -> 866 { label = "atom(atom)";};
829 { label = "primary(primary)";} -> 867 { label = "atom(atom)";};
831 { label = "arguments(arguments)";} -> 868 { label = "expressions_comma(expressions_comma)";};
833 { label = "power(power)";} -> 869 { label = "primary(primary)";};
834 { label = "term(term)";} -> 870 { label = "factor(factor)";};
835 { label = "power(power)";} -> 871 { label = "primary(primary)";};
836 { label = "primary(primary)";} -> 872 { label = "primary(primary)";};
836 { label = "primary(primary)";} -> 873 { label = "DELIMITER(()";};
836 { label = "primary(primary)";} -> 874 { label = "arguments(arguments)";};
836 { label = "primary(primary)";} -> 875 { label = "DELIMITER())";};
838 { label = "primary(primary)";} -> 876 { label = "primary(primary)";};
838 { label = "primary(primary)";} -> 877 { label = "DELIMITER(()";};
838 { label = "primary(primary)";} -> 878 { label = "DELIMITER())";};
839 { label = "atom(atom)";} -> 879 { label = "IDENTIFIER(print)";};
840 { label = "expressions_comma(expressions_comma)";} -> 880 { label = "expression(expression)";};
842 { label = "expression(expression)";} -> 881 { label = "disjunction(disjunction)";};
843 { label = "comparison(comparison)";} -> 882 { label = "bitwise_or(bitwise_or)";};
844 { label = "expressions_comma(expressions_comma)";} -> 883 { label = "expressions_comma(expressions_comma)";};
844 { label = "expressions_comma(expressions_comma)";} -> 884 { label = "DELIMITER(,)";};
844 { label = "expressions_comma(expressions_comma)";} -> 885 { label = "expression(expression)";};
846 { label = "expression(expression)";} -> 886 { label = "disjunction(disjunction)";};
847 { label = "primary(primary)";} -> 887 { label = "atom(atom)";};
848 { label = "factor(factor)";} -> 888 { label = "power(power)";};
849 { label = "atom(atom)";} -> 889 { label = "IDENTIFIER(int)";};
850 { label = "power(power)";} -> 890 { label = "primary(primary)";};
851 { label = "disjunction(disjunction)";} -> 891 { label = "conjunction(conjunction)";};
852 { label = "factor(factor)";} -> 892 { label = "power(power)";};
853 { label = "inversion(inversion)";} -> 893 { label = "comparison(comparison)";};
854 { label = "factor(factor)";} -> 894 { label = "power(power)";};
855 { label = "shift_expr(shift_expr)";} -> 895 { label = "sum(sum)";};
856 { label = "conjunction(conjunction)";} -> 896 { label = "inversion(inversion)";};
857 { label = "atom(atom)";} -> 897 { label = "IDENTIFIER(min_value)";};
858 { label = "primary(primary)";} -> 898 { label = "atom(atom)";};
859 { label = "factor(factor)";} -> 899 { label = "power(power)";};
860 { label = "atom(atom)";} -> 900 { label = "IDENTIFIER(int)";};
861 { label = "power(power)";} -> 901 { label = "primary(primary)";};
863 { label = "primary(primary)";} -> 902 { label = "atom(atom)";};
864 { label = "conjunction(conjunction)";} -> 903 { label = "inversion(inversion)";};
865 { label = "sum(sum)";} -> 904 { label = "term(term)";};
866 { label = "atom(atom)";} -> 905 { label = "IDENTIFIER(sum)";};
867 { label = "atom(atom)";} -> 906 { label = "IDENTIFIER(len)";};
868 { label = "expressions_comma(expressions_comma)";} -> 907 { label = "expression(expression)";};
869 { label = "primary(primary)";} -> 908 { label = "atom(atom)";};
870 { label = "factor(factor)";} -> 909 { label = "power(power)";};
871 { label = "primary(primary)";} -> 910 { label = "primary(primary)";};
871 { label = "primary(primary)";} -> 911 { label = "DELIMITER(()";};
871 { label = "primary(primary)";} -> 912 { label = "arguments(arguments)";};
871 { label = "primary(primary)";} -> 913 { label = "DELIMITER())";};
872 { label = "primary(primary)";} -> 914 { label = "atom(atom)";};
874 { label = "arguments(arguments)";} -> 915 { label = "expressions_comma(expressions_comma)";};
876 { label = "primary(primary)";} -> 916 { label = "atom(atom)";};
880 { label = "expression(expression)";} -> 917 { label = "disjunction(disjunction)";};
881 { label = "disjunction(disjunction)";} -> 918 { label = "conjunction(conjunction)";};
882 { label = "bitwise_or(bitwise_or)";} -> 919 { label = "bitwise_xor(bitwise_xor)";};
883 { label = "expressions_comma(expressions_comma)";} -> 920 { label = "expressions_comma(expressions_comma)";};
883 { label = "expressions_comma(expressions_comma)";} -> 921 { label = "DELIMITER(,)";};
883 { label = "expressions_comma(expressions_comma)";} -> 922 { label = "expression(expression)";};
885 { label = "expression(expression)";} -> 923 { label = "disjunction(disjunction)";};
886 { label = "disjunction(disjunction)";} -> 924 { label = "conjunction(conjunction)";};
887 { label = "atom(atom)";} -> 925 { label = "IDENTIFIER(float)";};
888 { label = "power(power)";} -> 926 { label = "primary(primary)";};
890 { label = "primary(primary)";} -> 927 { label = "atom(atom)";};
891 { label = "conjunction(conjunction)";} -> 928 { label = "inversion(inversion)";};
892 { label = "power(power)";} -> 929 { label = "primary(primary)";};
893 { label = "comparison(comparison)";} -> 930 { label = "bitwise_or(bitwise_or)";};
894 { label = "power(power)";} -> 931 { label = "primary(primary)";};
895 { label = "sum(sum)";} -> 932 { label = "term(term)";};
896 { label = "inversion(inversion)";} -> 933 { label = "comparison(comparison)";};
898 { label = "atom(atom)";} -> 934 { label = "IDENTIFIER(float)";};
899 { label = "power(power)";} -> 935 { label = "primary(primary)";};
901 { label = "primary(primary)";} -> 936 { label = "atom(atom)";};
902 { label = "atom(atom)";} -> 937 { label = "INT_LITERAL(0)";};
903 { label = "inversion(inversion)";} -> 938 { label = "comparison(comparison)";};
904 { label = "term(term)";} -> 939 { label = "factor(factor)";};
907 { label = "expression(expression)";} -> 940 { label = "disjunction(disjunction)";};
908 { label = "atom(atom)";} -> 941 { label = "IDENTIFIER(float)";};
909 { label = "power(power)";} -> 942 { label = "primary(primary)";};
910 { label = "primary(primary)";} -> 943 { label = "atom(atom)";};
912 { label = "arguments(arguments)";} -> 944 { label = "expressions_comma(expressions_comma)";};
914 { label = "atom(atom)";} -> 945 { label = "IDENTIFIER(print)";};
915 { label = "expressions_comma(expressions_comma)";} -> 946 { label = "expression(expression)";};
916 { label = "atom(atom)";} -> 947 { label = "IDENTIFIER(compute_avg)";};
917 { label = "disjunction(disjunction)";} -> 948 { label = "conjunction(conjunction)";};
918 { label = "conjunction(conjunction)";} -> 949 { label = "inversion(inversion)";};
919 { label = "bitwise_xor(bitwise_xor)";} -> 950 { label = "bitwise_and(bitwise_and)";};
920 { label = "expressions_comma(expressions_comma)";} -> 951 { label = "expressions_comma(expressions_comma)";};
920 { label = "expressions_comma(expressions_comma)";} -> 952 { label = "DELIMITER(,)";};
920 { label = "expressions_comma(expressions_comma)";} -> 953 { label = "expression(expression)";};
922 { label = "expression(expression)";} -> 954 { label = "disjunction(disjunction)";};
923 { label = "disjunction(disjunction)";} -> 955 { label = "conjunction(conjunction)";};
924 { label = "conjunction(conjunction)";} -> 956 { label = "inversion(inversion)";};
926 { label = "primary(primary)";} -> 957 { label = "atom(atom)";};
927 { label = "atom(atom)";} -> 958 { label = "INT_LITERAL(0)";};
928 { label = "inversion(inversion)";} -> 959 { label = "comparison(comparison)";};
929 { label = "primary(primary)";} -> 960 { label = "atom(atom)";};
930 { label = "bitwise_or(bitwise_or)";} -> 961 { label = "bitwise_xor(bitwise_xor)";};
931 { label = "primary(primary)";} -> 962 { label = "primary(primary)";};
931 { label = "primary(primary)";} -> 963 { label = "DELIMITER([)";};
931 { label = "primary(primary)";} -> 964 { label = "slices(slices)";};
931 { label = "primary(primary)";} -> 965 { label = "DELIMITER(])";};
932 { label = "term(term)";} -> 966 { label = "factor(factor)";};
933 { label = "comparison(comparison)";} -> 967 { label = "bitwise_or(bitwise_or)";};
935 { label = "primary(primary)";} -> 968 { label = "atom(atom)";};
936 { label = "atom(atom)";} -> 969 { label = "INT_LITERAL(0)";};
938 { label = "comparison(comparison)";} -> 970 { label = "bitwise_or(bitwise_or)";};
939 { label = "factor(factor)";} -> 971 { label = "power(power)";};
940 { label = "disjunction(disjunction)";} -> 972 { label = "conjunction(conjunction)";};
942 { label = "primary(primary)";} -> 973 { label = "primary(primary)";};
942 { label = "primary(primary)";} -> 974 { label = "DELIMITER(()";};
942 { label = "primary(primary)";} -> 975 { label = "DELIMITER())";};
943 { label = "atom(atom)";} -> 976 { label = "IDENTIFIER(print)";};
944 { label = "expressions_comma(expressions_comma)";} -> 977 { label = "expression(expression)";};
946 { label = "expression(expression)";} -> 978 { label = "disjunction(disjunction)";};
948 { label = "conjunction(conjunction)";} -> 979 { label = "inversion(inversion)";};
949 { label = "inversion(inversion)";} -> 980 { label = "comparison(comparison)";};
950 { label = "bitwise_and(bitwise_and)";} -> 981 { label = "shift_expr(shift_expr)";};
951 { label = "expressions_comma(expressions_comma)";} -> 982 { label = "expression(expression)";};
953 { label = "expression(expression)";} -> 983 { label = "disjunction(disjunction)";};
954 { label = "disjunction(disjunction)";} -> 984 { label = "conjunction(conjunction)";};
955 { label = "conjunction(conjunction)";} -> 985 { label = "inversion(inversion)";};
956 { label = "inversion(inversion)";} -> 986 { label = "comparison(comparison)";};
957 { label = "atom(atom)";} -> 987 { label = "KEYWORD(None)";};
959 { label = "comparison(comparison)";} -> 988 { label = "bitwise_or(bitwise_or)";};
960 { label = "atom(atom)";} -> 989 { label = "IDENTIFIER(min_value)";};
961 { label = "bitwise_xor(bitwise_xor)";} -> 990 { label = "bitwise_and(bitwise_and)";};
962 { label = "primary(primary)";} -> 991 { label = "atom(atom)";};
964 { label = "slices(slices)";} -> 992 { label = "slice(slice)";};
966 { label = "factor(factor)";} -> 993 { label = "power(power)";};
967 { label = "bitwise_or(bitwise_or)";} -> 994 { label = "bitwise_xor(bitwise_xor)";};
968 { label = "atom(atom)";} -> 995 { label = "KEYWORD(None)";};
970 { label = "bitwise_or(bitwise_or)";} -> 996 { label = "bitwise_xor(bitwise_xor)";};
971 { label = "power(power)";} -> 997 { label = "primary(primary)";};
972 { label = "conjunction(conjunction)";} -> 998 { label = "inversion(inversion)";};
973 { label = "primary(primary)";} -> 999 { label = "atom(atom)";};
977 { label = "expression(expression)";} -> 1000 { label = "disjunction(disjunction)";};
978 { label = "disjunction(disjunction)";} -> 1001 { label = "conjunction(conjunction)";};
979 { label = "inversion(inversion)";} -> 1002 { label = "comparison(comparison)";};
980 { label = "comparison(comparison)";} -> 1003 { label = "bitwise_or(bitwise_or)";};
981 { label = "shift_expr(shift_expr)";} -> 1004 { label = "sum(sum)";};
982 { label = "expression(expression)";} -> 1005 { label = "disjunction(disjunction)";};
983 { label = "disjunction(disjunction)";} -> 1006 { label = "conjunction(conjunction)";};
984 { label = "conjunction(conjunction)";} -> 1007 { label = "inversion(inversion)";};
985 { label = "inversion(inversion)";} -> 1008 { label = "comparison(comparison)";};
986 { label = "comparison(comparison)";} -> 1009 { label = "bitwise_or(bitwise_or)";};
988 { label = "bitwise_or(bitwise_or)";} -> 1010 { label = "bitwise_xor(bitwise_xor)";};
990 { label = "bitwise_and(bitwise_and)";} -> 1011 { label = "shift_expr(shift_expr)";};
991 { label = "atom(atom)";} -> 1012 { label = "IDENTIFIER(data)";};
992 { label = "slice(slice)";} -> 1013 { label = "expression(expression)";};
993 { label = "power(power)";} -> 1014 { label = "primary(primary)";};
994 { label = "bitwise_xor(bitwise_xor)";} -> 1015 { label = "bitwise_and(bitwise_and)";};
996 { label = "bitwise_xor(bitwise_xor)";} -> 1016 { label = "bitwise_and(bitwise_and)";};
997 { label = "primary(primary)";} -> 1017 { label = "primary(primary)";};
997 { label = "primary(primary)";} -> 1018 { label = "DELIMITER([)";};
997 { label = "primary(primary)";} -> 1019 { label = "slices(slices)";};
997 { label = "primary(primary)";} -> 1020 { label = "DELIMITER(])";};
998 { label = "inversion(inversion)";} -> 1021 { label = "comparison(comparison)";};
999 { label = "atom(atom)";} -> 1022 { label = "IDENTIFIER(compute_min)";};
1000 { label = "disjunction(disjunction)";} -> 1023 { label = "conjunction(conjunction)";};
1001 { label = "conjunction(conjunction)";} -> 1024 { label = "inversion(inversion)";};
1002 { label = "comparison(comparison)";} -> 1025 { label = "bitwise_or(bitwise_or)";};
1003 { label = "bitwise_or(bitwise_or)";} -> 1026 { label = "bitwise_xor(bitwise_xor)";};
1004 { label = "sum(sum)";} -> 1027 { label = "term(term)";};
1005 { label = "disjunction(disjunction)";} -> 1028 { label = "conjunction(conjunction)";};
1006 { label = "conjunction(conjunction)";} -> 1029 { label = "inversion(inversion)";};
1007 { label = "inversion(inversion)";} -> 1030 { label = "comparison(comparison)";};
1008 { label = "comparison(comparison)";} -> 1031 { label = "bitwise_or(bitwise_or)";};
1009 { label = "bitwise_or(bitwise_or)";} -> 1032 { label = "bitwise_xor(bitwise_xor)";};
1010 { label = "bitwise_xor(bitwise_xor)";} -> 1033 { label = "bitwise_and(bitwise_and)";};
1011 { label = "shift_expr(shift_expr)";} -> 1034 { label = "sum(sum)";};
1013 { label = "expression(expression)";} -> 1035 { label = "disjunction(disjunction)";};
1014 { label = "primary(primary)";} -> 1036 { label = "atom(atom)";};
1015 { label = "bitwise_and(bitwise_and)";} -> 1037 { label = "shift_expr(shift_expr)";};
1016 { label = "bitwise_and(bitwise_and)";} -> 1038 { label = "shift_expr(shift_expr)";};
1017 { label = "primary(primary)";} -> 1039 { label = "atom(atom)";};
1019 { label = "slices(slices)";} -> 1040 { label = "slice(slice)";};
1021 { label = "comparison(comparison)";} -> 1041 { label = "bitwise_or(bitwise_or)";};
1023 { label = "conjunction(conjunction)";} -> 1042 { label = "inversion(inversion)";};
1024 { label = "inversion(inversion)";} -> 1043 { label = "comparison(comparison)";};
1025 { label = "bitwise_or(bitwise_or)";} -> 1044 { label = "bitwise_xor(bitwise_xor)";};
1026 { label = "bitwise_xor(bitwise_xor)";} -> 1045 { label = "bitwise_and(bitwise_and)";};
1027 { label = "term(term)";} -> 1046 { label = "factor(factor)";};
1028 { label = "conjunction(conjunction)";} -> 1047 { label = "inversion(inversion)";};
1029 { label = "inversion(inversion)";} -> 1048 { label = "comparison(comparison)";};
1030 { label = "comparison(comparison)";} -> 1049 { label = "bitwise_or(bitwise_or)";};
1031 { label = "bitwise_or(bitwise_or)";} -> 1050 { label = "bitwise_xor(bitwise_xor)";};
1032 { label = "bitwise_xor(bitwise_xor)";} -> 1051 { label = "bitwise_and(bitwise_and)";};
1033 { label = "bitwise_and(bitwise_and)";} -> 1052 { label = "shift_expr(shift_expr)";};
1034 { label = "sum(sum)";} -> 1053 { label = "term(term)";};
1035 { label = "disjunction(disjunction)";} -> 1054 { label = "conjunction(conjunction)";};
1036 { label = "atom(atom)";} -> 1055 { label = "IDENTIFIER(min_value)";};
1037 { label = "shift_expr(shift_expr)";} -> 1056 { label = "sum(sum)";};
1038 { label = "shift_expr(shift_expr)";} -> 1057 { label = "sum(sum)";};
1039 { label = "atom(atom)";} -> 1058 { label = "IDENTIFIER(data)";};
1040 { label = "slice(slice)";} -> 1059 { label = "expression(expression)";};
1041 { label = "bitwise_or(bitwise_or)";} -> 1060 { label = "bitwise_xor(bitwise_xor)";};
1042 { label = "inversion(inversion)";} -> 1061 { label = "comparison(comparison)";};
1043 { label = "comparison(comparison)";} -> 1062 { label = "bitwise_or(bitwise_or)";};
1044 { label = "bitwise_xor(bitwise_xor)";} -> 1063 { label = "bitwise_and(bitwise_and)";};
1045 { label = "bitwise_and(bitwise_and)";} -> 1064 { label = "shift_expr(shift_expr)";};
1046 { label = "factor(factor)";} -> 1065 { label = "power(power)";};
1047 { label = "inversion(inversion)";} -> 1066 { label = "comparison(comparison)";};
1048 { label = "comparison(comparison)";} -> 1067 { label = "bitwise_or(bitwise_or)";};
1049 { label = "bitwise_or(bitwise_or)";} -> 1068 { label = "bitwise_xor(bitwise_xor)";};
1050 { label = "bitwise_xor(bitwise_xor)";} -> 1069 { label = "bitwise_and(bitwise_and)";};
1051 { label = "bitwise_and(bitwise_and)";} -> 1070 { label = "shift_expr(shift_expr)";};
1052 { label = "shift_expr(shift_expr)";} -> 1071 { label = "sum(sum)";};
1053 { label = "term(term)";} -> 1072 { label = "factor(factor)";};
1054 { label = "conjunction(conjunction)";} -> 1073 { label = "inversion(inversion)";};
1056 { label = "sum(sum)";} -> 1074 { label = "term(term)";};
1057 { label = "sum(sum)";} -> 1075 { label = "term(term)";};
1059 { label = "expression(expression)";} -> 1076 { label = "disjunction(disjunction)";};
1060 { label = "bitwise_xor(bitwise_xor)";} -> 1077 { label = "bitwise_and(bitwise_and)";};
1061 { label = "comparison(comparison)";} -> 1078 { label = "bitwise_or(bitwise_or)";};
1062 { label = "bitwise_or(bitwise_or)";} -> 1079 { label = "bitwise_xor(bitwise_xor)";};
1063 { label = "bitwise_and(bitwise_and)";} -> 1080 { label = "shift_expr(shift_expr)";};
1064 { label = "shift_expr(shift_expr)";} -> 1081 { label = "sum(sum)";};
1065 { label = "power(power)";} -> 1082 { label = "primary(primary)";};
1066 { label = "comparison(comparison)";} -> 1083 { label = "bitwise_or(bitwise_or)";};
1067 { label = "bitwise_or(bitwise_or)";} -> 1084 { label = "bitwise_xor(bitwise_xor)";};
1068 { label = "bitwise_xor(bitwise_xor)";} -> 1085 { label = "bitwise_and(bitwise_and)";};
1069 { label = "bitwise_and(bitwise_and)";} -> 1086 { label = "shift_expr(shift_expr)";};
1070 { label = "shift_expr(shift_expr)";} -> 1087 { label = "sum(sum)";};
1071 { label = "sum(sum)";} -> 1088 { label = "term(term)";};
1072 { label = "factor(factor)";} -> 1089 { label = "power(power)";};
1073 { label = "inversion(inversion)";} -> 1090 { label = "comparison(comparison)";};
1074 { label = "term(term)";} -> 1091 { label = "factor(factor)";};
1075 { label = "term(term)";} -> 1092 { label = "factor(factor)";};
1076 { label = "disjunction(disjunction)";} -> 1093 { label = "conjunction(conjunction)";};
1077 { label = "bitwise_and(bitwise_and)";} -> 1094 { label = "shift_expr(shift_expr)";};
1078 { label = "bitwise_or(bitwise_or)";} -> 1095 { label = "bitwise_xor(bitwise_xor)";};
1079 { label = "bitwise_xor(bitwise_xor)";} -> 1096 { label = "bitwise_and(bitwise_and)";};
1080 { label = "shift_expr(shift_expr)";} -> 1097 { label = "sum(sum)";};
1081 { label = "sum(sum)";} -> 1098 { label = "term(term)";};
1082 { label = "primary(primary)";} -> 1099 { label = "atom(atom)";};
1083 { label = "bitwise_or(bitwise_or)";} -> 1100 { label = "bitwise_xor(bitwise_xor)";};
1084 { label = "bitwise_xor(bitwise_xor)";} -> 1101 { label = "bitwise_and(bitwise_and)";};
1085 { label = "bitwise_and(bitwise_and)";} -> 1102 { label = "shift_expr(shift_expr)";};
1086 { label = "shift_expr(shift_expr)";} -> 1103 { label = "sum(sum)";};
1087 { label = "sum(sum)";} -> 1104 { label = "term(term)";};
1088 { label = "term(term)";} -> 1105 { label = "factor(factor)";};
1089 { label = "power(power)";} -> 1106 { label = "primary(primary)";};
1090 { label = "comparison(comparison)";} -> 1107 { label = "bitwise_or(bitwise_or)";};
1091 { label = "factor(factor)";} -> 1108 { label = "power(power)";};
1092 { label = "factor(factor)";} -> 1109 { label = "power(power)";};
1093 { label = "conjunction(conjunction)";} -> 1110 { label = "inversion(inversion)";};
1094 { label = "shift_expr(shift_expr)";} -> 1111 { label = "sum(sum)";};
1095 { label = "bitwise_xor(bitwise_xor)";} -> 1112 { label = "bitwise_and(bitwise_and)";};
1096 { label = "bitwise_and(bitwise_and)";} -> 1113 { label = "shift_expr(shift_expr)";};
1097 { label = "sum(sum)";} -> 1114 { label = "term(term)";};
1098 { label = "term(term)";} -> 1115 { label = "factor(factor)";};
1099 { label = "atom(atom)";} -> 1116 { label = "IDENTIFIER(float)";};
1100 { label = "bitwise_xor(bitwise_xor)";} -> 1117 { label = "bitwise_and(bitwise_and)";};
1101 { label = "bitwise_and(bitwise_and)";} -> 1118 { label = "shift_expr(shift_expr)";};
1102 { label = "shift_expr(shift_expr)";} -> 1119 { label = "sum(sum)";};
1103 { label = "sum(sum)";} -> 1120 { label = "term(term)";};
1104 { label = "term(term)";} -> 1121 { label = "factor(factor)";};
1105 { label = "factor(factor)";} -> 1122 { label = "power(power)";};
1106 { label = "primary(primary)";} -> 1123 { label = "primary(primary)";};
1106 { label = "primary(primary)";} -> 1124 { label = "DELIMITER([)";};
1106 { label = "primary(primary)";} -> 1125 { label = "slices(slices)";};
1106 { label = "primary(primary)";} -> 1126 { label = "DELIMITER(])";};
1107 { label = "bitwise_or(bitwise_or)";} -> 1127 { label = "bitwise_xor(bitwise_xor)";};
1108 { label = "power(power)";} -> 1128 { label = "primary(primary)";};
1109 { label = "power(power)";} -> 1129 { label = "primary(primary)";};
1110 { label = "inversion(inversion)";} -> 1130 { label = "comparison(comparison)";};
1111 { label = "sum(sum)";} -> 1131 { label = "term(term)";};
1112 { label = "bitwise_and(bitwise_and)";} -> 1132 { label = "shift_expr(shift_expr)";};
1113 { label = "shift_expr(shift_expr)";} -> 1133 { label = "sum(sum)";};
1114 { label = "term(term)";} -> 1134 { label = "factor(factor)";};
1115 { label = "factor(factor)";} -> 1135 { label = "power(power)";};
1117 { label = "bitwise_and(bitwise_and)";} -> 1136 { label = "shift_expr(shift_expr)";};
1118 { label = "shift_expr(shift_expr)";} -> 1137 { label = "sum(sum)";};
1119 { label = "sum(sum)";} -> 1138 { label = "term(term)";};
1120 { label = "term(term)";} -> 1139 { label = "factor(factor)";};
1121 { label = "factor(factor)";} -> 1140 { label = "OPERATOR(-)";};
1121 { label = "factor(factor)";} -> 1141 { label = "factor(factor)";};
1122 { label = "power(power)";} -> 1142 { label = "primary(primary)";};
1123 { label = "primary(primary)";} -> 1143 { label = "atom(atom)";};
1125 { label = "slices(slices)";} -> 1144 { label = "slice(slice)";};
1127 { label = "bitwise_xor(bitwise_xor)";} -> 1145 { label = "bitwise_and(bitwise_and)";};
1128 { label = "primary(primary)";} -> 1146 { label = "primary(primary)";};
1128 { label = "primary(primary)";} -> 1147 { label = "DELIMITER([)";};
1128 { label = "primary(primary)";} -> 1148 { label = "slices(slices)";};
1128 { label = "primary(primary)";} -> 1149 { label = "DELIMITER(])";};
1129 { label = "primary(primary)";} -> 1150 { label = "primary(primary)";};
1129 { label = "primary(primary)";} -> 1151 { label = "DELIMITER(()";};
1129 { label = "primary(primary)";} -> 1152 { label = "arguments(arguments)";};
1129 { label = "primary(primary)";} -> 1153 { label = "DELIMITER())";};
1130 { label = "comparison(comparison)";} -> 1154 { label = "bitwise_or(bitwise_or)";};
1131 { label = "term(term)";} -> 1155 { label = "factor(factor)";};
1132 { label = "shift_expr(shift_expr)";} -> 1156 { label = "sum(sum)";};
1133 { label = "sum(sum)";} -> 1157 { label = "term(term)";};
1134 { label = "factor(factor)";} -> 1158 { label = "power(power)";};
1135 { label = "power(power)";} -> 1159 { label = "primary(primary)";};
1136 { label = "shift_expr(shift_expr)";} -> 1160 { label = "sum(sum)";};
1137 { label = "sum(sum)";} -> 1161 { label = "term(term)";};
1138 { label = "term(term)";} -> 1162 { label = "factor(factor)";};
1139 { label = "factor(factor)";} -> 1163 { label = "power(power)";};
1141 { label = "factor(factor)";} -> 1164 { label = "power(power)";};
1142 { label = "primary(primary)";} -> 1165 { label = "primary(primary)";};
1142 { label = "primary(primary)";} -> 1166 { label = "DELIMITER(()";};
1142 { label = "primary(primary)";} -> 1167 { label = "arguments(arguments)";};
1142 { label = "primary(primary)";} -> 1168 { label = "DELIMITER())";};
1143 { label = "atom(atom)";} -> 1169 { label = "IDENTIFIER(data)";};
1144 { label = "slice(slice)";} -> 1170 { label = "expression(expression)";};
1145 { label = "bitwise_and(bitwise_and)";} -> 1171 { label = "shift_expr(shift_expr)";};
1146 { label = "primary(primary)";} -> 1172 { label = "atom(atom)";};
1148 { label = "slices(slices)";} -> 1173 { label = "slice(slice)";};
1150 { label = "primary(primary)";} -> 1174 { label = "atom(atom)";};
1152 { label = "arguments(arguments)";} -> 1175 { label = "expressions_comma(expressions_comma)";};
1154 { label = "bitwise_or(bitwise_or)";} -> 1176 { label = "bitwise_xor(bitwise_xor)";};
1155 { label = "factor(factor)";} -> 1177 { label = "power(power)";};
1156 { label = "sum(sum)";} -> 1178 { label = "term(term)";};
1157 { label = "term(term)";} -> 1179 { label = "factor(factor)";};
1158 { label = "power(power)";} -> 1180 { label = "primary(primary)";};
1159 { label = "primary(primary)";} -> 1181 { label = "atom(atom)";};
1160 { label = "sum(sum)";} -> 1182 { label = "term(term)";};
1161 { label = "term(term)";} -> 1183 { label = "factor(factor)";};
1162 { label = "factor(factor)";} -> 1184 { label = "power(power)";};
1163 { label = "power(power)";} -> 1185 { label = "primary(primary)";};
1164 { label = "power(power)";} -> 1186 { label = "primary(primary)";};
1165 { label = "primary(primary)";} -> 1187 { label = "atom(atom)";};
1167 { label = "arguments(arguments)";} -> 1188 { label = "expressions_comma(expressions_comma)";};
1170 { label = "expression(expression)";} -> 1189 { label = "disjunction(disjunction)";};
1171 { label = "shift_expr(shift_expr)";} -> 1190 { label = "sum(sum)";};
1172 { label = "atom(atom)";} -> 1191 { label = "IDENTIFIER(data)";};
1173 { label = "slice(slice)";} -> 1192 { label = "expression(expression)";};
1174 { label = "atom(atom)";} -> 1193 { label = "IDENTIFIER(len)";};
1175 { label = "expressions_comma(expressions_comma)";} -> 1194 { label = "expression(expression)";};
1176 { label = "bitwise_xor(bitwise_xor)";} -> 1195 { label = "bitwise_and(bitwise_and)";};
1177 { label = "power(power)";} -> 1196 { label = "primary(primary)";};
1178 { label = "term(term)";} -> 1197 { label = "factor(factor)";};
1179 { label = "factor(factor)";} -> 1198 { label = "power(power)";};
1180 { label = "primary(primary)";} -> 1199 { label = "atom(atom)";};
1181 { label = "atom(atom)";} -> 1200 { label = "IDENTIFIER(avg_value)";};
1182 { label = "term(term)";} -> 1201 { label = "factor(factor)";};
1183 { label = "factor(factor)";} -> 1202 { label = "power(power)";};
1184 { label = "power(power)";} -> 1203 { label = "primary(primary)";};
1185 { label = "primary(primary)";} -> 1204 { label = "atom(atom)";};
1186 { label = "primary(primary)";} -> 1205 { label = "atom(atom)";};
1187 { label = "atom(atom)";} -> 1206 { label = "IDENTIFIER(len)";};
1188 { label = "expressions_comma(expressions_comma)";} -> 1207 { label = "expression(expression)";};
1189 { label = "disjunction(disjunction)";} -> 1208 { label = "conjunction(conjunction)";};
1190 { label = "sum(sum)";} -> 1209 { label = "term(term)";};
1192 { label = "expression(expression)";} -> 1210 { label = "disjunction(disjunction)";};
1194 { label = "expression(expression)";} -> 1211 { label = "disjunction(disjunction)";};
1195 { label = "bitwise_and(bitwise_and)";} -> 1212 { label = "shift_expr(shift_expr)";};
1196 { label = "primary(primary)";} -> 1213 { label = "atom(atom)";};
1197 { label = "factor(factor)";} -> 1214 { label = "power(power)";};
1198 { label = "power(power)";} -> 1215 { label = "primary(primary)";};
1199 { label = "atom(atom)";} -> 1216 { label = "strings(strings)";};
1201 { label = "factor(factor)";} -> 1217 { label = "OPERATOR(-)";};
1201 { label = "factor(factor)";} -> 1218 { label = "factor(factor)";};
1202 { label = "power(power)";} -> 1219 { label = "primary(primary)";};
1203 { label = "primary(primary)";} -> 1220 { label = "atom(atom)";};
1204 { label = "atom(atom)";} -> 1221 { label = "INT_LITERAL(11)";};
1205 { label = "atom(atom)";} -> 1222 { label = "FLOAT_LITERAL(9.1)";};
1207 { label = "expression(expression)";} -> 1223 { label = "disjunction(disjunction)";};
1208 { label = "conjunction(conjunction)";} -> 1224 { label = "inversion(inversion)";};
1209 { label = "term(term)";} -> 1225 { label = "factor(factor)";};
1210 { label = "disjunction(disjunction)";} -> 1226 { label = "conjunction(conjunction)";};
1211 { label = "disjunction(disjunction)";} -> 1227 { label = "conjunction(conjunction)";};
1212 { label = "shift_expr(shift_expr)";} -> 1228 { label = "sum(sum)";};
1213 { label = "atom(atom)";} -> 1229 { label = "IDENTIFIER(data)";};
1214 { label = "power(power)";} -> 1230 { label = "primary(primary)";};
1215 { label = "primary(primary)";} -> 1231 { label = "atom(atom)";};
1216 { label = "strings(strings)";} -> 1232 { label = "string(string)";};
1218 { label = "factor(factor)";} -> 1233 { label = "power(power)";};
1219 { label = "primary(primary)";} -> 1234 { label = "atom(atom)";};
1220 { label = "atom(atom)";} -> 1235 { label = "FLOAT_LITERAL(0.9)";};
1223 { label = "disjunction(disjunction)";} -> 1236 { label = "conjunction(conjunction)";};
1224 { label = "inversion(inversion)";} -> 1237 { label = "comparison(comparison)";};
1225 { label = "factor(factor)";} -> 1238 { label = "power(power)";};
1226 { label = "conjunction(conjunction)";} -> 1239 { label = "inversion(inversion)";};
1227 { label = "conjunction(conjunction)";} -> 1240 { label = "inversion(inversion)";};
1228 { label = "sum(sum)";} -> 1241 { label = "term(term)";};
1230 { label = "primary(primary)";} -> 1242 { label = "atom(atom)";};
1231 { label = "atom(atom)";} -> 1243 { label = "IDENTIFIER(min_value)";};
1232 { label = "string(string)";} -> 1244 { label = "STRING_LITERAL("Average value: ")";};
1233 { label = "power(power)";} -> 1245 { label = "primary(primary)";};
1234 { label = "atom(atom)";} -> 1246 { label = "FLOAT_LITERAL(3.14)";};
1236 { label = "conjunction(conjunction)";} -> 1247 { label = "inversion(inversion)";};
1237 { label = "comparison(comparison)";} -> 1248 { label = "bitwise_or(bitwise_or)";};
1238 { label = "power(power)";} -> 1249 { label = "primary(primary)";};
1239 { label = "inversion(inversion)";} -> 1250 { label = "comparison(comparison)";};
1240 { label = "inversion(inversion)";} -> 1251 { label = "comparison(comparison)";};
1241 { label = "term(term)";} -> 1252 { label = "factor(factor)";};
1242 { label = "atom(atom)";} -> 1253 { label = "strings(strings)";};
1245 { label = "primary(primary)";} -> 1254 { label = "atom(atom)";};
1247 { label = "inversion(inversion)";} -> 1255 { label = "comparison(comparison)";};
1248 { label = "bitwise_or(bitwise_or)";} -> 1256 { label = "bitwise_xor(bitwise_xor)";};
1249 { label = "primary(primary)";} -> 1257 { label = "atom(atom)";};
1250 { label = "comparison(comparison)";} -> 1258 { label = "bitwise_or(bitwise_or)";};
1251 { label = "comparison(comparison)";} -> 1259 { label = "bitwise_or(bitwise_or)";};
1252 { label = "factor(factor)";} -> 1260 { label = "power(power)";};
1253 { label = "strings(strings)";} -> 1261 { label = "string(string)";};
1254 { label = "atom(atom)";} -> 1262 { label = "FLOAT_LITERAL(2.3)";};
1255 { label = "comparison(comparison)";} -> 1263 { label = "bitwise_or(bitwise_or)";};
1256 { label = "bitwise_xor(bitwise_xor)";} -> 1264 { label = "bitwise_and(bitwise_and)";};
1257 { label = "atom(atom)";} -> 1265 { label = "IDENTIFIER(i)";};
1258 { label = "bitwise_or(bitwise_or)";} -> 1266 { label = "bitwise_xor(bitwise_xor)";};
1259 { label = "bitwise_or(bitwise_or)";} -> 1267 { label = "bitwise_xor(bitwise_xor)";};
1260 { label = "power(power)";} -> 1268 { label = "primary(primary)";};
1261 { label = "string(string)";} -> 1269 { label = "STRING_LITERAL("Minimum value: ")";};
1263 { label = "bitwise_or(bitwise_or)";} -> 1270 { label = "bitwise_xor(bitwise_xor)";};
1264 { label = "bitwise_and(bitwise_and)";} -> 1271 { label = "shift_expr(shift_expr)";};
1266 { label = "bitwise_xor(bitwise_xor)";} -> 1272 { label = "bitwise_and(bitwise_and)";};
1267 { label = "bitwise_xor(bitwise_xor)";} -> 1273 { label = "bitwise_and(bitwise_and)";};
1268 { label = "primary(primary)";} -> 1274 { label = "atom(atom)";};
1270 { label = "bitwise_xor(bitwise_xor)";} -> 1275 { label = "bitwise_and(bitwise_and)";};
1271 { label = "shift_expr(shift_expr)";} -> 1276 { label = "sum(sum)";};
1272 { label = "bitwise_and(bitwise_and)";} -> 1277 { label = "shift_expr(shift_expr)";};
1273 { label = "bitwise_and(bitwise_and)";} -> 1278 { label = "shift_expr(shift_expr)";};
1274 { label = "atom(atom)";} -> 1279 { label = "IDENTIFIER(i)";};
1275 { label = "bitwise_and(bitwise_and)";} -> 1280 { label = "shift_expr(shift_expr)";};
1276 { label = "sum(sum)";} -> 1281 { label = "term(term)";};
1277 { label = "shift_expr(shift_expr)";} -> 1282 { label = "sum(sum)";};
1278 { label = "shift_expr(shift_expr)";} -> 1283 { label = "sum(sum)";};
1280 { label = "shift_expr(shift_expr)";} -> 1284 { label = "sum(sum)";};
1281 { label = "term(term)";} -> 1285 { label = "factor(factor)";};
1282 { label = "sum(sum)";} -> 1286 { label = "term(term)";};
1283 { label = "sum(sum)";} -> 1287 { label = "term(term)";};
1284 { label = "sum(sum)";} -> 1288 { label = "term(term)";};
1285 { label = "factor(factor)";} -> 1289 { label = "power(power)";};
1286 { label = "term(term)";} -> 1290 { label = "factor(factor)";};
1287 { label = "term(term)";} -> 1291 { label = "factor(factor)";};
1288 { label = "term(term)";} -> 1292 { label = "factor(factor)";};
1289 { label = "power(power)";} -> 1293 { label = "primary(primary)";};
1290 { label = "factor(factor)";} -> 1294 { label = "power(power)";};
1291 { label = "factor(factor)";} -> 1295 { label = "power(power)";};
1292 { label = "factor(factor)";} -> 1296 { label = "power(power)";};
1293 { label = "primary(primary)";} -> 1297 { label = "atom(atom)";};
1294 { label = "power(power)";} -> 1298 { label = "primary(primary)";};
1295 { label = "power(power)";} -> 1299 { label = "primary(primary)";};
1296 { label = "power(power)";} -> 1300 { label = "primary(primary)";};
1297 { label = "atom(atom)";} -> 1301 { label = "IDENTIFIER(i)";};
1298 { label = "primary(primary)";} -> 1302 { label = "atom(atom)";};
1299 { label = "primary(primary)";} -> 1303 { label = "atom(atom)";};
1300 { label = "primary(primary)";} -> 1304 { label = "atom(atom)";};
1302 { label = "atom(atom)";} -> 1305 { label = "IDENTIFIER(i)";};
1303 { label = "atom(atom)";} -> 1306 { label = "IDENTIFIER(data)";};
1304 { label = "atom(atom)";} -> 1307 { label = "IDENTIFIER(data)";};
}